
{
    "swagger":"2.0",
    "info":{
        "version":"v2",
        "title":"AvaTax API",
        "description":"REST interface to Avalara's enterprise tax service, AvaTax.",
        "contact":{
            "name":"Avalara Developer Relations",
            "url":"https://developer.avalara.com"
        },
        "license":{
            "name":"Terms of Use",
            "url":"https://www.avalara.com/terms-of-use/"
        }
    },
    "host": "rest-sbx-preview.avalara.net",
    "schemes": [
        "https"
    ],
    "basePath":"/",
    "paths":{
        "/api/v2/accounts/{id}":{
            "get":{
                "tags":[
                    "Accounts"
                ],
                "summary":"Retrieve a single account",
                "operationId":"ApiV2AccountsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the account to retrieve.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/AccountModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Accounts"
                ],
                "summary":"Update a single account",
                "operationId":"ApiV2AccountsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The account object you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AccountModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the account you wish to update.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/AccountModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Accounts"
                ],
                "summary":"Delete a single account",
                "description":"Deleting an account will delete all companies, and all account level users attached to this account.",
                "operationId":"ApiV2AccountsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the account you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/accounts":{
            "get":{
                "tags":[
                    "Accounts"
                ],
                "summary":"Retrieve all accounts",
                "operationId":"ApiV2AccountsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[AccountModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Accounts"
                ],
                "summary":"Create a new account",
                "operationId":"ApiV2AccountsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The account you wish to create.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AccountModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/AccountModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/addresses/resolve":{
            "post":{
                "tags":[
                    "Addresses"
                ],
                "summary":"Retrieve geolocation information for a specified address",
                "operationId":"ApiV2AddressesResolvePost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"request",
                        "in":"body",
                        "description":"The address to resolve",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AddressInfo"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/AddressResolutionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/batches/{id}":{
            "get":{
                "tags":[
                    "Batches"
                ],
                "summary":"Retrieve a single batch",
                "operationId":"ApiV2CompaniesByCompanyIdBatchesByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this batch",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this batch",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/BatchModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Batches"
                ],
                "summary":"Update a single batch",
                "operationId":"ApiV2CompaniesByCompanyIdBatchesByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The batch you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/BatchModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this batch belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the batch you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/BatchModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Batches"
                ],
                "summary":"Delete a single batch",
                "operationId":"ApiV2CompaniesByCompanyIdBatchesByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this batch.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the batch you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/batches":{
            "get":{
                "tags":[
                    "Batches"
                ],
                "summary":"Retrieve all batches for this company",
                "operationId":"ApiV2CompaniesByCompanyIdBatchesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these batches",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[BatchModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Batches"
                ],
                "summary":"Create a new batch",
                "operationId":"ApiV2CompaniesByCompanyIdBatchesPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The batch you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/BatchModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this batch.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/BatchModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/batches":{
            "get":{
                "tags":[
                    "Batches"
                ],
                "summary":"Retrieve all batches",
                "operationId":"ApiV2BatchesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[BatchModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{id}":{
            "get":{
                "tags":[
                    "Companies"
                ],
                "summary":"Retrieve a single company",
                "operationId":"ApiV2CompaniesByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the company to retrieve.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/CompanyModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Companies"
                ],
                "summary":"Update a single company",
                "operationId":"ApiV2CompaniesByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The company object you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CompanyModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the company you wish to update.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/CompanyModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Companies"
                ],
                "summary":"Delete a single company",
                "description":"Deleting a company will delete all child companies, and all users attached to this company.",
                "operationId":"ApiV2CompaniesByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the company you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies":{
            "get":{
                "tags":[
                    "Companies"
                ],
                "summary":"Retrieve all companies",
                "operationId":"ApiV2CompaniesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[CompanyModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Companies"
                ],
                "summary":"Create a new company",
                "operationId":"ApiV2CompaniesPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The company you wish to create.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CompanyModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/CompanyModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/initialize":{
            "post":{
                "tags":[
                    "Companies"
                ],
                "summary":"Quick setup for a company with a single physical address",
                "operationId":"ApiV2CompaniesInitializePost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"Information about the company you wish to create.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CompanyInitializationModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/CompanyModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/contacts/{id}":{
            "get":{
                "tags":[
                    "Contacts"
                ],
                "summary":"Retrieve a single contact",
                "operationId":"ApiV2CompaniesByCompanyIdContactsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this contact",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this contact",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ContactModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Contacts"
                ],
                "summary":"Update a single contact",
                "operationId":"ApiV2CompaniesByCompanyIdContactsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The contact you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/ContactModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this contact belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the contact you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ContactModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Contacts"
                ],
                "summary":"Delete a single contact",
                "operationId":"ApiV2CompaniesByCompanyIdContactsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this contact.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the contact you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/contacts":{
            "get":{
                "tags":[
                    "Contacts"
                ],
                "summary":"Retrieve contacts for this company",
                "operationId":"ApiV2CompaniesByCompanyIdContactsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these contacts",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[ContactModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Contacts"
                ],
                "summary":"Create a new contact",
                "operationId":"ApiV2CompaniesByCompanyIdContactsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The contacts you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ContactModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this contact.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ContactModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/contacts":{
            "get":{
                "tags":[
                    "Contacts"
                ],
                "summary":"Retrieve all contacts",
                "operationId":"ApiV2ContactsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[ContactModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/nexus":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported nexus for all countries and regions.",
                "operationId":"ApiV2DefinitionsNexusGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[NexusModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/nexus/{country}":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported nexus for a country.",
                "operationId":"ApiV2DefinitionsNexusByCountryGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"country",
                        "in":"path",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[NexusModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/nexus/{country}/{region}":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported nexus for a country and region.",
                "operationId":"ApiV2DefinitionsNexusByCountryByRegionGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"country",
                        "in":"path",
                        "description":"The two-character ISO-3166 code for the country.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"region",
                        "in":"path",
                        "description":"The two or three character region code for the region.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[NexusModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/taxcodes":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported tax codes.",
                "operationId":"ApiV2DefinitionsTaxcodesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxCodeModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/subscriptiontypes":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported subscription types",
                "operationId":"ApiV2DefinitionsSubscriptiontypesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[SubscriptionTypeModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/taxauthorities":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported tax authorities.",
                "operationId":"ApiV2DefinitionsTaxauthoritiesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxAuthorityModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/definitions/taxauthorityforms":{
            "get":{
                "tags":[
                    "Definitions"
                ],
                "summary":"Retrieve the full list of Avalara-supported tax authorities.",
                "operationId":"ApiV2DefinitionsTaxauthorityformsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxAuthorityFormModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/filingcalendars/{id}":{
            "get":{
                "tags":[
                    "FilingCalendars"
                ],
                "summary":"Retrieve a single filing calendar",
                "operationId":"ApiV2CompaniesByCompanyIdFilingcalendarsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this filing calendar",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this filing calendar",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FilingCalendarModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "FilingCalendars"
                ],
                "summary":"Update a single filing calendar",
                "operationId":"ApiV2CompaniesByCompanyIdFilingcalendarsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The filing calendar you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/FilingCalendarModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this filing calendar belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the filing calendar you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FilingCalendarModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "FilingCalendars"
                ],
                "summary":"Delete a single filing calendar",
                "operationId":"ApiV2CompaniesByCompanyIdFilingcalendarsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this filing calendar.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the filing calendar you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/filingcalendars":{
            "get":{
                "tags":[
                    "FilingCalendars"
                ],
                "summary":"Retrieve filing calendars for this company",
                "operationId":"ApiV2CompaniesByCompanyIdFilingcalendarsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these filing calendars",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[FilingCalendarModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "FilingCalendars"
                ],
                "summary":"Create a new filing calendar",
                "operationId":"ApiV2CompaniesByCompanyIdFilingcalendarsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The filing calendars you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/FilingCalendarModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this filing calendar.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/FilingCalendarModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/filingcalendars":{
            "get":{
                "tags":[
                    "FilingCalendars"
                ],
                "summary":"Retrieve all filing calendars",
                "operationId":"ApiV2FilingcalendarsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[FilingCalendarModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/items/{id}":{
            "get":{
                "tags":[
                    "Items"
                ],
                "summary":"Retrieve a single item",
                "operationId":"ApiV2CompaniesByCompanyIdItemsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this item object",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this item",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ItemModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Items"
                ],
                "summary":"Update a single item",
                "operationId":"ApiV2CompaniesByCompanyIdItemsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The item object you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/ItemModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this item belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the item you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ItemModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Items"
                ],
                "summary":"Delete a single item",
                "operationId":"ApiV2CompaniesByCompanyIdItemsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this item.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the item you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/items":{
            "get":{
                "tags":[
                    "Items"
                ],
                "summary":"Retrieve items for this company",
                "operationId":"ApiV2CompaniesByCompanyIdItemsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these items",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[ItemModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Items"
                ],
                "summary":"Create a new item",
                "operationId":"ApiV2CompaniesByCompanyIdItemsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The item you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ItemModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this item.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ItemModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/items":{
            "get":{
                "tags":[
                    "Items"
                ],
                "summary":"Retrieve all items",
                "operationId":"ApiV2ItemsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[ItemModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/locations/{id}":{
            "get":{
                "tags":[
                    "Locations"
                ],
                "summary":"Retrieve a single location",
                "operationId":"ApiV2CompaniesByCompanyIdLocationsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this location",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this location",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/LocationModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Locations"
                ],
                "summary":"Update a single location",
                "operationId":"ApiV2CompaniesByCompanyIdLocationsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The location you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/LocationModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this location belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the location you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/LocationModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Locations"
                ],
                "summary":"Delete a single location",
                "operationId":"ApiV2CompaniesByCompanyIdLocationsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this location.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the location you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/locations":{
            "get":{
                "tags":[
                    "Locations"
                ],
                "summary":"Retrieve locations for this company",
                "operationId":"ApiV2CompaniesByCompanyIdLocationsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these locations",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[LocationModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Locations"
                ],
                "summary":"Create a new location",
                "operationId":"ApiV2CompaniesByCompanyIdLocationsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The location you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/LocationModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this location.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/LocationModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/locations":{
            "get":{
                "tags":[
                    "Locations"
                ],
                "summary":"Retrieve all locations",
                "operationId":"ApiV2LocationsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[LocationModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/nexus/{id}":{
            "get":{
                "tags":[
                    "Nexus"
                ],
                "summary":"Retrieve a single nexus",
                "operationId":"ApiV2CompaniesByCompanyIdNexusByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this nexus object",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this nexus",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/NexusModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Nexus"
                ],
                "summary":"Update a single nexus",
                "operationId":"ApiV2CompaniesByCompanyIdNexusByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The nexus object you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/NexusModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this nexus belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the nexus you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/NexusModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Nexus"
                ],
                "summary":"Delete a single nexus",
                "operationId":"ApiV2CompaniesByCompanyIdNexusByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this nexus.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the nexus you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/nexus":{
            "get":{
                "tags":[
                    "Nexus"
                ],
                "summary":"Retrieve nexus for this company",
                "operationId":"ApiV2CompaniesByCompanyIdNexusGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these nexus objects",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[NexusModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Nexus"
                ],
                "summary":"Create a new nexus",
                "operationId":"ApiV2CompaniesByCompanyIdNexusPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The nexus you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/NexusModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this nexus.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/NexusModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/nexus":{
            "get":{
                "tags":[
                    "Nexus"
                ],
                "summary":"Retrieve all nexus",
                "operationId":"ApiV2NexusGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[NexusModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/passwords":{
            "put":{
                "tags":[
                    "Passwords"
                ],
                "summary":"Change Password",
                "operationId":"ApiV2PasswordsPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"An object containing your current password and the new password.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/PasswordChangeModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK"
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/settings/{id}":{
            "get":{
                "tags":[
                    "Settings"
                ],
                "summary":"Retrieve a single setting",
                "operationId":"ApiV2CompaniesByCompanyIdSettingsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this setting",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this setting",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/SettingModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Settings"
                ],
                "summary":"Update a single setting",
                "operationId":"ApiV2CompaniesByCompanyIdSettingsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The setting you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/SettingModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this setting belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the setting you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/SettingModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Settings"
                ],
                "summary":"Delete a single setting",
                "operationId":"ApiV2CompaniesByCompanyIdSettingsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this setting.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the setting you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/settings":{
            "get":{
                "tags":[
                    "Settings"
                ],
                "summary":"Retrieve all settings for this company",
                "operationId":"ApiV2CompaniesByCompanyIdSettingsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these settings",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[SettingModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Settings"
                ],
                "summary":"Create a new setting",
                "operationId":"ApiV2CompaniesByCompanyIdSettingsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The setting you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SettingModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this setting.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SettingModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/settings":{
            "get":{
                "tags":[
                    "Settings"
                ],
                "summary":"Retrieve all settings",
                "operationId":"ApiV2SettingsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[SettingModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/subscriptions/{id}":{
            "get":{
                "tags":[
                    "Subscriptions"
                ],
                "summary":"Retrieve a single subscription",
                "operationId":"ApiV2AccountsByAccountIdSubscriptionsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The ID of the account that owns this subscription",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this subscription",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/SubscriptionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Subscriptions"
                ],
                "summary":"Update a single subscription",
                "operationId":"ApiV2AccountsByAccountIdSubscriptionsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The subscription you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/SubscriptionModel"
                        }
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The ID of the account that this subscription belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the subscription you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/SubscriptionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Subscriptions"
                ],
                "summary":"Delete a single subscription",
                "operationId":"ApiV2AccountsByAccountIdSubscriptionsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The ID of the account that owns this subscription.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the subscription you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/subscriptions":{
            "get":{
                "tags":[
                    "Subscriptions"
                ],
                "summary":"Retrieve subscriptions for this account",
                "operationId":"ApiV2AccountsByAccountIdSubscriptionsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The ID of the account that owns these subscriptions",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[SubscriptionModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Subscriptions"
                ],
                "summary":"Create a new subscription",
                "operationId":"ApiV2AccountsByAccountIdSubscriptionsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The subscription you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SubscriptionModel"
                            }
                        }
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The ID of the account that owns this subscription.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SubscriptionModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/subscriptions":{
            "get":{
                "tags":[
                    "Subscriptions"
                ],
                "summary":"Retrieve all subscriptions",
                "operationId":"ApiV2SubscriptionsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[SubscriptionModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/taxcodes/{id}":{
            "get":{
                "tags":[
                    "TaxCodes"
                ],
                "summary":"Retrieve a single tax code",
                "operationId":"ApiV2CompaniesByCompanyIdTaxcodesByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this tax code",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this tax code",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TaxCodeModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "TaxCodes"
                ],
                "summary":"Update a single tax code",
                "operationId":"ApiV2CompaniesByCompanyIdTaxcodesByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The tax code you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/TaxCodeModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this tax code belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the tax code you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TaxCodeModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "TaxCodes"
                ],
                "summary":"Delete a single tax code",
                "operationId":"ApiV2CompaniesByCompanyIdTaxcodesByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this tax code.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the tax code you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/taxcodes":{
            "get":{
                "tags":[
                    "TaxCodes"
                ],
                "summary":"Retrieve tax codes for this company",
                "operationId":"ApiV2CompaniesByCompanyIdTaxcodesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these tax codes",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxCodeModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "TaxCodes"
                ],
                "summary":"Create a new tax code",
                "operationId":"ApiV2CompaniesByCompanyIdTaxcodesPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The tax code you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/TaxCodeModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this tax code.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/TaxCodeModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/taxcodes":{
            "get":{
                "tags":[
                    "TaxCodes"
                ],
                "summary":"Retrieve all tax codes",
                "operationId":"ApiV2TaxcodesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxCodeModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/taxrates/byaddress":{
            "get":{
                "tags":[
                    "TaxRates"
                ],
                "summary":"Retrieve tax rates for a specified address",
                "operationId":"ApiV2TaxratesByaddressGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"line1",
                        "in":"query",
                        "description":"The street address of the location.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"line2",
                        "in":"query",
                        "description":"The street address of the location.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"line3",
                        "in":"query",
                        "description":"The street address of the location.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"city",
                        "in":"query",
                        "description":"The city name of the location.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"region",
                        "in":"query",
                        "description":"The state or region of the location",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"postalCode",
                        "in":"query",
                        "description":"The postal code of the location.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"country",
                        "in":"query",
                        "description":"The two letter ISO-3166 country code.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TaxRateModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/taxrates/bypostalcode":{
            "get":{
                "tags":[
                    "TaxRates"
                ],
                "summary":"Retrieve tax rates for a specified country and postal code",
                "operationId":"ApiV2TaxratesBypostalcodeGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"country",
                        "in":"query",
                        "description":"The two letter ISO-3166 country code.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"postalCode",
                        "in":"query",
                        "description":"The postal code of the location.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TaxRateModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/taxrules/{id}":{
            "get":{
                "tags":[
                    "TaxRules"
                ],
                "summary":"Retrieve a single tax rule",
                "operationId":"ApiV2CompaniesByCompanyIdTaxrulesByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this tax rule",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this tax rule",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TaxRuleModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "TaxRules"
                ],
                "summary":"Update a single tax rule",
                "operationId":"ApiV2CompaniesByCompanyIdTaxrulesByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The tax rule you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/TaxRuleModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this tax rule belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the tax rule you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TaxRuleModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "TaxRules"
                ],
                "summary":"Delete a single tax rule",
                "operationId":"ApiV2CompaniesByCompanyIdTaxrulesByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this tax rule.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the tax rule you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/taxrules":{
            "get":{
                "tags":[
                    "TaxRules"
                ],
                "summary":"Retrieve tax rules for this company",
                "operationId":"ApiV2CompaniesByCompanyIdTaxrulesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these tax rules",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxRuleModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "TaxRules"
                ],
                "summary":"Create a new tax rule",
                "operationId":"ApiV2CompaniesByCompanyIdTaxrulesPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The tax rule you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/TaxRuleModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this tax rule.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/TaxRuleModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/taxrules":{
            "get":{
                "tags":[
                    "TaxRules"
                ],
                "summary":"Retrieve all tax rules",
                "operationId":"ApiV2TaxrulesGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TaxRuleModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions/{transactionCode}":{
            "get":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Retrieve a single transaction",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"transactionCode",
                        "in":"path",
                        "description":"The transaction code to retrieve",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Delete a single transaction",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"transactionCode",
                        "in":"path",
                        "description":"The transaction code to post",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ErrorDetail"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions":{
            "get":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Retrieve all transactions",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[TransactionModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions/{transactionCode}/adjust":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Correct a previously created transaction",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeAdjustPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"transactionCode",
                        "in":"path",
                        "description":"The transaction code to adjust",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The adjustment you wish to make",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AdjustTransactionModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions/{transactionCode}/commit":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Convert an invoice into a sale or purchase",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeCommitPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"transactionCode",
                        "in":"path",
                        "description":"The transaction code to commit",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The commit request you wish to execute",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CommitTransactionModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions/{transactionCode}/cancel":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Cancel a transaction",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeCancelPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"transactionCode",
                        "in":"path",
                        "description":"The transaction code to cancel",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The cancel request you wish to execute",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CancelTransactionModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions/{transactionCode}/post":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Mark a transaction as posted to the ledger",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodePostPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded this transaction",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"transactionCode",
                        "in":"path",
                        "description":"The transaction code to post",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The post request you wish to execute",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/PostTransactionModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyCode}/transactions/create":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Create a new transaction",
                "operationId":"ApiV2CompaniesByCompanyCodeTransactionsCreatePost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyCode",
                        "in":"path",
                        "description":"The company code of the company that recorded these transactions",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The transaction or transactions you wish to create",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/CreateTransactionModel"
                            }
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/TransactionModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/transactions/{id}":{
            "get":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Retrieve a single transaction",
                "operationId":"ApiV2TransactionsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The id of this transaction",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Delete a single transaction",
                "operationId":"ApiV2TransactionsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the transaction you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ErrorDetail"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/transactions/{id}/adjust":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Correct a previously created transaction",
                "operationId":"ApiV2TransactionsByIdAdjustPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The transaction you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AdjustTransactionModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the transaction you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/transactions/{id}/commit":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Convert an invoice into a sale or purchase",
                "operationId":"ApiV2TransactionsByIdCommitPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The transaction you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CommitTransactionModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the transaction you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/transactions/{id}/cancel":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Cancel a transaction",
                "operationId":"ApiV2TransactionsByIdCancelPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The transaction you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CancelTransactionModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the transaction you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/transactions/{id}/post":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Mark a transaction as posted to the ledger",
                "operationId":"ApiV2TransactionsByIdPostPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The transaction you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/PostTransactionModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the transaction you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/TransactionModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/transactions/create":{
            "post":{
                "tags":[
                    "Transactions"
                ],
                "summary":"Create a new transaction",
                "operationId":"ApiV2TransactionsCreatePost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"A list of transactions to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/CreateTransactionModel"
                            }
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/TransactionModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/upcs/{id}":{
            "get":{
                "tags":[
                    "Upcs"
                ],
                "summary":"Retrieve a single UPC",
                "operationId":"ApiV2CompaniesByCompanyIdUpcsByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this UPC",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The primary key of this UPC",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/UPCModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Upcs"
                ],
                "summary":"Update a single UPC",
                "operationId":"ApiV2CompaniesByCompanyIdUpcsByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The UPC you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/UPCModel"
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that this UPC belongs to.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the UPC you wish to update",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/UPCModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Upcs"
                ],
                "summary":"Delete a single UPC",
                "operationId":"ApiV2CompaniesByCompanyIdUpcsByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this UPC.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the UPC you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/companies/{companyId}/upcs":{
            "get":{
                "tags":[
                    "Upcs"
                ],
                "summary":"Retrieve UPCs for this company",
                "operationId":"ApiV2CompaniesByCompanyIdUpcsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns these UPCs",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[UPCModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Upcs"
                ],
                "summary":"Create a new UPC",
                "operationId":"ApiV2CompaniesByCompanyIdUpcsPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"models",
                        "in":"body",
                        "description":"The UPC you wish to create.",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/UPCModel"
                            }
                        }
                    },
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"The ID of the company that owns this UPC.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/UPCModel"
                            }
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/upcs":{
            "get":{
                "tags":[
                    "Upcs"
                ],
                "summary":"Retrieve all UPCs",
                "operationId":"ApiV2UpcsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[UPCModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/users/{id}":{
            "get":{
                "tags":[
                    "Users"
                ],
                "summary":"Retrieve a single user",
                "operationId":"ApiV2AccountsByAccountIdUsersByIdGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the user to retrieve.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The accountID of the user you wish to get.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/UserModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "put":{
                "tags":[
                    "Users"
                ],
                "summary":"Update a single user",
                "operationId":"ApiV2AccountsByAccountIdUsersByIdPut",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The user object you wish to update.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/UserModel"
                        }
                    },
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the user you wish to update.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The accountID of the user you wish to update.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/AccountModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "delete":{
                "tags":[
                    "Users"
                ],
                "summary":"Delete a single user",
                "operationId":"ApiV2AccountsByAccountIdUsersByIdDelete",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the user you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The accountID of the user you wish to delete.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/users":{
            "get":{
                "tags":[
                    "Users"
                ],
                "summary":"Retrieve users for this account",
                "operationId":"ApiV2AccountsByAccountIdUsersGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The accountID of the user you wish to list.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[UserModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            },
            "post":{
                "tags":[
                    "Users"
                ],
                "summary":"Create a new user",
                "operationId":"ApiV2AccountsByAccountIdUsersPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "description":"The user you wish to create.",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/UserModel"
                        }
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The accountID of the user you wish to create.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/UserModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/users":{
            "get":{
                "tags":[
                    "Users"
                ],
                "summary":"Retrieve all users",
                "operationId":"ApiV2UsersGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"$include",
                        "in":"query",
                        "description":"A comma separated list of child objects to return underneath the primary object.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$filter",
                        "in":"query",
                        "description":"A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"$top",
                        "in":"query",
                        "description":"If nonzero, return no more than this number of results.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$skip",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"$orderBy",
                        "in":"query",
                        "description":"A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/FetchResult[UserModel]"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/users/{id}/entitlements":{
            "get":{
                "tags":[
                    "Users"
                ],
                "summary":"Retrieve all entitlements for a single user",
                "operationId":"ApiV2AccountsByAccountIdUsersByIdEntitlementsGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"The ID of the user to retrieve.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"accountId",
                        "in":"path",
                        "description":"The accountID of the user you wish to get.",
                        "required":true,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/UserEntitlementModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/utilities/ping":{
            "get":{
                "tags":[
                    "Utilities"
                ],
                "summary":"Tests connectivity and version of the service",
                "operationId":"UtilitiesPingGet",
                "consumes":[

                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/PingResultModel"
                        }
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/utilities/isauthorized":{
            "post":{
                "tags":[
                    "Utilities"
                ],
                "summary":"Checks authentication and authorization to one or more operations on the service.",
                "operationId":"UtilitiesIsauthorizedPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"operations",
                        "in":"body",
                        "required":false,
                        "schema":{
                            "type":"array",
                            "items":{
                                "type":"string"
                            }
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK"
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        },
        "/utilities/isserviceauthorized":{
            "post":{
                "tags":[
                    "Utilities"
                ],
                "summary":"Checks if service is authorized for given service type",
                "operationId":"UtilitiesIsserviceauthorizedPost",
                "consumes":[
                    "application/json",
                    "text/json",
                    "application/json-patch+json"
                ],
                "produces":[

                ],
                "parameters":[
                    {
                        "name":"model",
                        "in":"body",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/CheckServiceAuthorizedModel"
                        }
                    },
                    {
                        "name":"Authorization",
                        "in":"header",
                        "description":"Account Services v2 supports three types of authentication: OpenID bearer token (recommended), basic license key, and basic password:\r\n                    <ul>\r\n                        <li>Bearer [accessToken]</li>\r\n                        <li>Basic [accountId]:[licenseKey]</li>\r\n                        <li>Basic [userName]:[password]</li>\r\n                    </ul>\r\n                    Please note that for Basic methods, you must encode the right side of the string in Base64.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content"
                    },
                    "200":{
                        "description":"OK"
                    },
                    "404":{
                        "description":"NotFound",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    },
                    "400":{
                        "description":"BadRequest",
                        "schema":{
                            "$ref":"#/definitions/ErrorResult"
                        }
                    }
                },
                "deprecated":false,
                "security":[
                    {
                        "UserSecurity":[

                        ],
                        "ApiKeySecurity":[

                        ],
                        "OauthSecurity":[

                        ]
                    }
                ]
            }
        }
    },
    "definitions":{
        "AccountModel":{
            "description":"Account Model",
            "required":[
                "name"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "name":{
                    "description":"Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"Effective Date",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"End Date",
                    "type":"string"
                },
                "accountStatusId":{
                    "description":"Account Status Id",
                    "enum":[
                        "Inactive",
                        "Active",
                        "Test",
                        "New"
                    ],
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                },
                "subscriptions":{
                    "description":"Subscriptions",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SubscriptionModel"
                    }
                },
                "users":{
                    "description":"Users",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/UserModel"
                    }
                }
            }
        },
        "SubscriptionModel":{
            "description":"Subscription Model",
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "accountId":{
                    "format":"int32",
                    "description":"Account Id",
                    "type":"integer"
                },
                "subscriptionTypeId":{
                    "format":"int32",
                    "description":"Subscription Type Id",
                    "type":"integer"
                },
                "subscriptionDescription":{
                    "description":"Subscription Description",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"Effective Date",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"End Date",
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "UserModel":{
            "description":"User Model",
            "required":[
                "userName",
                "email",
                "postalCode"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"id",
                    "type":"integer"
                },
                "accountId":{
                    "format":"int32",
                    "description":"accountId",
                    "type":"integer"
                },
                "userName":{
                    "description":"userName",
                    "maxLength":50,
                    "minLength":5,
                    "type":"string"
                },
                "firstName":{
                    "description":"firstName",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "lastName":{
                    "description":"lastName",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "email":{
                    "description":"email",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "postalCode":{
                    "description":"postalCode",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "securityRoleId":{
                    "description":"securityRoleId",
                    "enum":[
                        "NoAccess",
                        "SiteAdmin",
                        "AccountOperator",
                        "AccountAdmin",
                        "AccountUser",
                        "SystemAdmin",
                        "Registrar",
                        "CSPTester",
                        "CSPAdmin",
                        "SystemOperator",
                        "TechnicalSupportUser",
                        "TechnicalSupportAdmin",
                        "TreasuryUser",
                        "TreasuryAdmin",
                        "ComplianceUser",
                        "ComplianceAdmin",
                        "ProStoresOperator",
                        "CompanyUser",
                        "CompanyAdmin",
                        "ComplianceTempUser",
                        "ComplianceRootUser",
                        "ComplianceOperator",
                        "SSTAdmin"
                    ],
                    "type":"string"
                },
                "companyId":{
                    "format":"int32",
                    "description":"companyId",
                    "type":"integer"
                },
                "passwordStatus":{
                    "description":"passwordStatus",
                    "enum":[
                        "UserCannotChange",
                        "UserCanChange",
                        "UserMustChange"
                    ],
                    "type":"string"
                },
                "isActive":{
                    "description":"isActive",
                    "type":"boolean"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "ErrorResult":{
            "description":"Helper function for throwing known error response",
            "type":"object",
            "properties":{
                "error":{
                    "$ref":"#/definitions/ErrorInfo",
                    "description":"Information about the error(s)"
                }
            }
        },
        "ErrorInfo":{
            "description":"Information about the error that occurred",
            "type":"object",
            "properties":{
                "code":{
                    "description":"Category of the error",
                    "enum":[
                        "Unknown",
                        "Authentication",
                        "RequestParsing",
                        "IncorrectData",
                        "InternalError"
                    ],
                    "type":"string"
                },
                "message":{
                    "description":"Short one-line message to summaryize what went wrong",
                    "type":"string"
                },
                "target":{
                    "description":"What object or service caused the error?",
                    "enum":[
                        "Unknown",
                        "HttpRequest",
                        "HttpRequestHeaders",
                        "IncorrectData",
                        "AvaTaxApiServer",
                        "AvalaraIdentityServer"
                    ],
                    "type":"string"
                },
                "details":{
                    "description":"Array of detailed error messages",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ErrorDetail"
                    }
                }
            }
        },
        "ErrorDetail":{
            "description":"Message object",
            "type":"object",
            "properties":{
                "errorCode":{
                    "format":"int32",
                    "description":"Error message identifier",
                    "type":"integer"
                },
                "summary":{
                    "description":"Concise summary of the message",
                    "type":"string"
                },
                "details":{
                    "description":"Message details",
                    "type":"string"
                },
                "faultCode":{
                    "description":"Indicates the SoapFault code",
                    "type":"string"
                },
                "helpLink":{
                    "description":"URL to help for this message",
                    "type":"string"
                },
                "name":{
                    "description":"Name of the message.",
                    "type":"string"
                },
                "refersTo":{
                    "description":"Item the message refers to, if applicable.  This is used to indicate a missing or incorrect value.",
                    "type":"string"
                },
                "severity":{
                    "description":"Severity of the message",
                    "enum":[
                        "Success",
                        "Warning",
                        "Error",
                        "Exception"
                    ],
                    "type":"string"
                },
                "source":{
                    "description":"Source of the message",
                    "type":"string"
                },
                "documentation":{
                    "description":"Documentation of the message",
                    "type":"string"
                }
            }
        },
        "FetchResult[AccountModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/AccountModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "AddressInfo":{
            "description":"Represents an address to resolve.  \r\n            Note that there are no data validations on this model since malformed addresses will get \"best-guess\" resolution.",
            "type":"object",
            "properties":{
                "line1":{
                    "description":"Line1",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line2":{
                    "description":"Line2",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line3":{
                    "description":"Line3",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "city":{
                    "description":"City",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "region":{
                    "description":"State / Province / Region",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "country":{
                    "description":"Two character ISO 3166 Country Code",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "postalCode":{
                    "description":"Postal Code / Zip Code",
                    "maxLength":11,
                    "minLength":0,
                    "type":"string"
                },
                "latitude":{
                    "format":"double",
                    "description":"Geospatial latitude measurement",
                    "type":"number"
                },
                "longitude":{
                    "format":"double",
                    "description":"Geospatial longitude measurement",
                    "type":"number"
                }
            }
        },
        "AddressResolutionModel":{
            "description":"Address Resolution Model",
            "type":"object",
            "properties":{
                "address":{
                    "$ref":"#/definitions/AddressInfo",
                    "description":"The resolved address"
                },
                "coordinates":{
                    "$ref":"#/definitions/CoordinateInfo",
                    "description":"The geospatial coordinates of this address"
                },
                "resolutionQuality":{
                    "description":"The resolution quality of the geospatial coordinates",
                    "enum":[
                        "NotCoded",
                        "External",
                        "CountryCentroid",
                        "RegionCentroid",
                        "PartialCentroid",
                        "PostalCentroidGood",
                        "PostalCentroidBetter",
                        "PostalCentroidBest",
                        "Intersection",
                        "Interpolated",
                        "Rooftop",
                        "Constant"
                    ],
                    "type":"string"
                },
                "taxAuthorities":{
                    "description":"List of tax authorities that apply to this geospatial coordinate",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxAuthorityInfo"
                    }
                }
            }
        },
        "CoordinateInfo":{
            "description":"Coordinate Info",
            "type":"object",
            "properties":{
                "latitude":{
                    "format":"double",
                    "description":"Latitude",
                    "type":"number"
                },
                "longitude":{
                    "format":"double",
                    "description":"Longitude",
                    "type":"number"
                }
            }
        },
        "TaxAuthorityInfo":{
            "description":"Tax Authority Info",
            "required":[
                "jurisdictionName"
            ],
            "type":"object",
            "properties":{
                "avalaraId":{
                    "description":"Avalara Id",
                    "type":"string"
                },
                "jurisdictionName":{
                    "description":"Jurisdiction Name",
                    "maxLength":128,
                    "minLength":0,
                    "type":"string"
                },
                "jurisdictionType":{
                    "description":"Jurisdiction Type",
                    "enum":[
                        "Country",
                        "Composite",
                        "State",
                        "County",
                        "City",
                        "Special"
                    ],
                    "type":"string"
                },
                "signatureCode":{
                    "description":"Signature Code",
                    "maxLength":4,
                    "minLength":0,
                    "type":"string"
                }
            }
        },
        "BatchModel":{
            "description":"Represents a batch of uploaded documents",
            "required":[
                "name",
                "accountId",
                "companyId",
                "type"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"The ID number of this batch",
                    "type":"integer"
                },
                "name":{
                    "description":"The user-friendly readable name for this batch",
                    "maxLength":194,
                    "minLength":0,
                    "type":"string"
                },
                "accountId":{
                    "format":"int32",
                    "description":"The Account ID number of the account that owns this batch",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"The Company ID number of the company that owns this batch",
                    "type":"integer"
                },
                "type":{
                    "description":"The type of this batch",
                    "enum":[
                        "AvaCertUpdate",
                        "AvaCertUpdateAll",
                        "BatchMaintenance",
                        "CompanyLocationImport",
                        "DocumentImport",
                        "ExemptCertImport",
                        "ItemImport",
                        "SalesAuditExport",
                        "SstpTestDeckImport",
                        "TaxRuleImport",
                        "TransactionImport",
                        "UPCBulkImport",
                        "UPCValidationImport"
                    ],
                    "type":"string"
                },
                "status":{
                    "description":"This batch's current processing status",
                    "enum":[
                        "Waiting",
                        "SystemErrors",
                        "Cancelled",
                        "Completed",
                        "Creating",
                        "Deleted",
                        "Errors",
                        "Paused",
                        "Processing"
                    ],
                    "type":"string"
                },
                "options":{
                    "description":"Any optional flags provided for this batch",
                    "maxLength":200,
                    "minLength":0,
                    "type":"string"
                },
                "batchAgent":{
                    "description":"The agent used to create this batch",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "startedDate":{
                    "format":"date-time",
                    "description":"The date/time when this batch started processing",
                    "type":"string"
                },
                "recordCount":{
                    "format":"int32",
                    "description":"The number of records in this batch",
                    "type":"integer"
                },
                "currentRecord":{
                    "format":"int32",
                    "description":"The current record being processed",
                    "type":"integer"
                },
                "completedDate":{
                    "format":"date-time",
                    "description":"The date/time when this batch was completely processed",
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                },
                "files":{
                    "description":"The list of files contained in this batch",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/BatchFileModel"
                    }
                }
            }
        },
        "BatchFileModel":{
            "description":"Represents one file in a batch upload",
            "required":[
                "name",
                "content",
                "contentType",
                "fileExtension"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Unique BatchFile identifier",
                    "type":"integer"
                },
                "batchId":{
                    "format":"int32",
                    "description":"BatchId that this BatchFile is associated with.",
                    "type":"integer"
                },
                "name":{
                    "description":"Logical Name of file (e.g. \"Input\" or \"Error\")",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "content":{
                    "format":"byte",
                    "description":"BatchFile content",
                    "type":"string"
                },
                "contentLength":{
                    "format":"int32",
                    "description":"Size of content in bytes",
                    "type":"integer"
                },
                "contentType":{
                    "description":"Content mime type (e.g. text/csv).  This is used for HTTP downloading.",
                    "maxLength":100,
                    "minLength":0,
                    "type":"string"
                },
                "fileExtension":{
                    "description":"File extension (e.g. CSV)",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "errorCount":{
                    "format":"int32",
                    "description":"Number of errors that occurred when processing this file.",
                    "type":"integer"
                }
            }
        },
        "FetchResult[BatchModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/BatchModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "CompanyModel":{
            "description":"Company Model",
            "required":[
                "accountId",
                "companyCode",
                "name",
                "taxpayerIdNumber"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "accountId":{
                    "format":"int32",
                    "description":"Account Id",
                    "type":"integer"
                },
                "parentCompanyId":{
                    "format":"int32",
                    "description":"Parent Company Id",
                    "type":"integer"
                },
                "sstPid":{
                    "description":"SST Pid",
                    "maxLength":9,
                    "minLength":0,
                    "type":"string"
                },
                "companyCode":{
                    "description":"Company Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "name":{
                    "description":"Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "isDefault":{
                    "description":"Is Default",
                    "type":"boolean"
                },
                "defaultLocationId":{
                    "format":"int32",
                    "description":"Default Location Id",
                    "type":"integer"
                },
                "isActive":{
                    "description":"Is Active",
                    "type":"boolean"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                },
                "taxpayerIdNumber":{
                    "description":"Tax Payer Id Number",
                    "maxLength":11,
                    "minLength":0,
                    "type":"string"
                },
                "hasProfile":{
                    "description":"Has Profile",
                    "type":"boolean"
                },
                "isReportingEntity":{
                    "description":"Is Reporting Entity",
                    "type":"boolean"
                },
                "sstEffectiveDate":{
                    "format":"date-time",
                    "description":"SST Effective Date",
                    "type":"string"
                },
                "entityNo":{
                    "format":"int32",
                    "description":"Entity No",
                    "type":"integer"
                },
                "defaultCountry":{
                    "description":"Default Country",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "baseCurrencyCode":{
                    "description":"Base Currency Code",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "roundingLevelId":{
                    "description":"Rounding Level Id",
                    "enum":[
                        "Line",
                        "Document"
                    ],
                    "type":"string"
                },
                "cashBasisAccountingEnabled":{
                    "description":"Cash Basis Accounting Enabled",
                    "type":"boolean"
                },
                "warningsEnabled":{
                    "description":"Warnings Enabled",
                    "type":"boolean"
                },
                "isTest":{
                    "description":"Is Test",
                    "type":"boolean"
                },
                "taxDependencyLevelId":{
                    "description":"Tax dependency Level Id",
                    "enum":[
                        "Document",
                        "State",
                        "TaxRegion",
                        "Address"
                    ],
                    "type":"string"
                },
                "inProgress":{
                    "description":"In Progress",
                    "type":"boolean"
                },
                "businessIdentificationNo":{
                    "description":"Business Identification No",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "contacts":{
                    "description":"Contacts",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ContactModel"
                    }
                },
                "filingCalendars":{
                    "description":"Filing Calendars",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/FilingCalendarModel"
                    }
                },
                "items":{
                    "description":"Items",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ItemModel"
                    }
                },
                "locations":{
                    "description":"Locations",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/LocationModel"
                    }
                },
                "nexus":{
                    "description":"Nexus",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/NexusModel"
                    }
                },
                "settings":{
                    "description":"Settings",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SettingModel"
                    }
                },
                "taxCodes":{
                    "description":"Tax Codes",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxCodeModel"
                    }
                },
                "taxRules":{
                    "description":"Tax Rules",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxRuleModel"
                    }
                },
                "upcs":{
                    "description":"UPCs",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/UPCModel"
                    }
                }
            }
        },
        "ContactModel":{
            "description":"Contact Model",
            "required":[
                "contactCode"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"companyId",
                    "type":"integer"
                },
                "contactCode":{
                    "description":"contactCode",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "firstName":{
                    "description":"firstName",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "middleName":{
                    "description":"middleName",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "lastName":{
                    "description":"lastName",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "title":{
                    "description":"title",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line1":{
                    "description":"line1",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line2":{
                    "description":"line2",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line3":{
                    "description":"line3",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "city":{
                    "description":"city",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "region":{
                    "description":"region",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "postalCode":{
                    "description":"postalCode",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "country":{
                    "description":"country",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "email":{
                    "description":"email",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "phone":{
                    "description":"phone",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "phone2":{
                    "description":"phone2",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "fax":{
                    "description":"fax",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "FilingCalendarModel":{
            "description":"Filing Calendar",
            "required":[
                "returnName",
                "stateRegistrationId",
                "taxTypeId"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int64",
                    "description":"Id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"Company Id",
                    "type":"integer"
                },
                "returnName":{
                    "description":"Return Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "locationCode":{
                    "description":"If this calendar is for a location-specific tax return, specify the location code here.  To file for all locations, leave this value NULL.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "outletTypeId":{
                    "description":"If this calendar is for a location-specific tax return, specify the location-specific behavior here.",
                    "enum":[
                        "None",
                        "Schedule",
                        "Duplicate"
                    ],
                    "type":"string"
                },
                "paymentCurrency":{
                    "description":"Specify the ISO 4217 currency code for the currency to remit for this tax return.  For all tax returns in the United States, specify \"USD\".",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "filingFrequencyId":{
                    "description":"Filing Frequency Id",
                    "enum":[
                        "Monthly",
                        "Quarterly",
                        "SemiAnnually",
                        "Annually",
                        "Bimonthly",
                        "Occasional",
                        "InverseQuarterly"
                    ],
                    "type":"string"
                },
                "months":{
                    "format":"int32",
                    "description":"Months",
                    "type":"integer"
                },
                "stateRegistrationId":{
                    "description":"Tax Registration ID for this Region - in the U.S., this is for your state.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "localRegistrationId":{
                    "description":"Tax Registration ID for the local jurisdiction, if any.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "employerIdentificationNumber":{
                    "description":"Employer Identification Number",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line1":{
                    "description":"Line1",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line2":{
                    "description":"Line2",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "city":{
                    "description":"City",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "region":{
                    "description":"Region",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "postalCode":{
                    "description":"Postal Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "country":{
                    "description":"Country",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "phone":{
                    "description":"Phone",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "customerFilingInstructions":{
                    "description":"Customer Filing Instructions",
                    "maxLength":1000,
                    "minLength":0,
                    "type":"string"
                },
                "legalEntityName":{
                    "description":"Legal Entity Name",
                    "maxLength":75,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"Effective Date",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"End Date",
                    "type":"string"
                },
                "filingTypeId":{
                    "description":"Filing Type Id",
                    "enum":[
                        "PaperReturn",
                        "ElectronicReturn",
                        "SER",
                        "EFTPaper",
                        "PhonePaper",
                        "SignatureReady",
                        "EfileCheck"
                    ],
                    "type":"string"
                },
                "eFileUsername":{
                    "description":"If you file electronically, this is the username you use to log in to the tax authority's website.",
                    "maxLength":254,
                    "minLength":0,
                    "type":"string"
                },
                "eFilePassword":{
                    "description":"If you file electronically, this is the password or pass code you use to log in to the tax authority's website.",
                    "maxLength":40,
                    "minLength":0,
                    "type":"string"
                },
                "prepayPercentage":{
                    "format":"byte",
                    "description":"Prepay Percentage",
                    "type":"string"
                },
                "taxTypeId":{
                    "description":"Tax Type Id",
                    "enum":[
                        "All",
                        "BothSalesAndUseTax",
                        "ConsumerUseTax",
                        "MedicalExcise",
                        "Fee",
                        "VATInputTax",
                        "VATNonrecoverableInputTax",
                        "VATOutputTax",
                        "Rental",
                        "SalesTax",
                        "UseTax"
                    ],
                    "type":"string"
                },
                "internalNotes":{
                    "description":"Internal Notes",
                    "maxLength":1000,
                    "minLength":0,
                    "type":"string"
                },
                "alSignOn":{
                    "description":"Al Sign On",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "alAccessCode":{
                    "description":"Al Access Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "meBusinessCode":{
                    "description":"Me Business Code",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "iaBen":{
                    "description":"Ia Ben",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "ctReg":{
                    "description":"Ct Reg",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "other1Name":{
                    "description":"Other 1 Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "other1Value":{
                    "description":"Other 1 Value",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "other2Name":{
                    "description":"Other 2 Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "other2Value":{
                    "description":"Other 2 Value",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "other3Name":{
                    "description":"Other 3 Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "other3Value":{
                    "description":"Other 3 Value",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "ItemModel":{
            "description":"Item Model",
            "required":[
                "itemCode",
                "description"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int64",
                    "description":"Id",
                    "type":"integer"
                },
                "itemCode":{
                    "description":"Item Code",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "companyId":{
                    "format":"int32",
                    "description":"Company Id",
                    "type":"integer"
                },
                "taxCodeId":{
                    "format":"int32",
                    "description":"Tax Code Id",
                    "type":"integer"
                },
                "taxCode":{
                    "description":"Tax Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "description":{
                    "description":"Description",
                    "maxLength":255,
                    "minLength":0,
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "LocationModel":{
            "description":"Location Model",
            "required":[
                "locationCode",
                "line1"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"Company Id",
                    "type":"integer"
                },
                "locationCode":{
                    "description":"Location Code",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "description":{
                    "description":"Description",
                    "maxLength":255,
                    "minLength":0,
                    "type":"string"
                },
                "addressTypeId":{
                    "description":"Address Type Id",
                    "enum":[
                        "Location",
                        "Salesperson"
                    ],
                    "type":"string"
                },
                "addressCategoryId":{
                    "description":"Address Category Id",
                    "enum":[
                        "Storefront",
                        "MainOffice",
                        "Warehouse",
                        "Salesperson",
                        "Other"
                    ],
                    "type":"string"
                },
                "line1":{
                    "description":"Line1",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line2":{
                    "description":"Line2",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line3":{
                    "description":"Line3",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "city":{
                    "description":"City",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "region":{
                    "description":"Region",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "postalCode":{
                    "description":"Postal Code",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "country":{
                    "description":"Country",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "stateAssignedCode":{
                    "description":"State Assigned Code",
                    "maxLength":13,
                    "minLength":0,
                    "type":"string"
                },
                "isDefault":{
                    "description":"Is Default",
                    "type":"boolean"
                },
                "county":{
                    "description":"County",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "isRegistered":{
                    "description":"Is Registered",
                    "type":"boolean"
                },
                "dbaName":{
                    "description":"Dba Name",
                    "maxLength":100,
                    "minLength":0,
                    "type":"string"
                },
                "outletName":{
                    "description":"Outlet Name",
                    "maxLength":100,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"Start Date",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"End Date",
                    "type":"string"
                },
                "lastTransactionDate":{
                    "format":"date-time",
                    "description":"Last Transaction Date",
                    "type":"string"
                },
                "registeredDate":{
                    "format":"date-time",
                    "description":"Registered Date",
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "NexusModel":{
            "description":"Nexus Model",
            "required":[
                "state",
                "jurisCode",
                "jurisName"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"companyId",
                    "type":"integer"
                },
                "state":{
                    "description":"state",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "jurisTypeId":{
                    "description":"jurisTypeId",
                    "enum":[
                        "STA",
                        "CTY",
                        "CIT",
                        "STJ",
                        "CNT"
                    ],
                    "type":"string"
                },
                "jurisCode":{
                    "description":"jurisCode",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "jurisName":{
                    "description":"jurisName",
                    "maxLength":200,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"effectiveDate",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"endDate",
                    "type":"string"
                },
                "shortName":{
                    "description":"shortName",
                    "maxLength":15,
                    "minLength":0,
                    "type":"string"
                },
                "signatureCode":{
                    "description":"signatureCode",
                    "maxLength":4,
                    "minLength":0,
                    "type":"string"
                },
                "stateAssignedNo":{
                    "description":"stateAssignedNo",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "nexusTypeId":{
                    "description":"nexusTypeId",
                    "enum":[
                        "None",
                        "Volunteer",
                        "Collect",
                        "NonVolunteer",
                        "Legal",
                        "SSTVolunteer",
                        "SSTNonVolunteer"
                    ],
                    "type":"string"
                },
                "country":{
                    "description":"country",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "sourcing":{
                    "description":"sourcing",
                    "enum":[
                        "Destination",
                        "Origin"
                    ],
                    "type":"string"
                },
                "accountingMethodId":{
                    "format":"byte",
                    "description":"accountingMethodId",
                    "type":"string"
                },
                "hasLocalNexus":{
                    "description":"hasLocalNexus",
                    "type":"boolean"
                },
                "localNexusTypeId":{
                    "description":"localNexusTypeId",
                    "enum":[
                        "Selected",
                        "StateAdministered",
                        "All"
                    ],
                    "type":"string"
                },
                "hasPermanentEstablishment":{
                    "description":"hasPermanentEstablishment",
                    "type":"boolean"
                },
                "taxId":{
                    "description":"taxId",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "SettingModel":{
            "description":"Setting Model",
            "required":[
                "set",
                "name"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"Company Id",
                    "type":"integer"
                },
                "set":{
                    "description":"Set",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "name":{
                    "description":"Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "value":{
                    "description":"Value",
                    "maxLength":200,
                    "minLength":0,
                    "type":"string"
                }
            }
        },
        "TaxCodeModel":{
            "description":"Tax Code Model",
            "required":[
                "taxCode",
                "taxCodeTypeId"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "taxCode":{
                    "description":"Tax Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "taxCodeTypeId":{
                    "description":"Tax Code Type Id",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "companyId":{
                    "format":"int32",
                    "description":"Company Id",
                    "type":"integer"
                },
                "description":{
                    "description":"Description",
                    "maxLength":255,
                    "minLength":0,
                    "type":"string"
                },
                "parentTaxCode":{
                    "description":"Parent Tax Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "isPhysical":{
                    "description":"Is Physical",
                    "type":"boolean"
                },
                "goodsServiceCode":{
                    "format":"int64",
                    "description":"Good Service Code",
                    "type":"integer"
                },
                "entityUseCode":{
                    "description":"Entity Use Code",
                    "maxLength":40,
                    "minLength":0,
                    "type":"string"
                },
                "isActive":{
                    "description":"Is Active",
                    "type":"boolean"
                },
                "isSSTCertified":{
                    "description":"Is SST Certified",
                    "type":"boolean"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "TaxRuleModel":{
            "description":"Tax Rule Model",
            "required":[
                "jurisCode",
                "country",
                "region"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"CompanyId",
                    "type":"integer"
                },
                "stateFIPS":{
                    "description":"State FIPS",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "jurisName":{
                    "description":"Jurisdiction Name",
                    "maxLength":200,
                    "minLength":0,
                    "type":"string"
                },
                "jurisCode":{
                    "description":"Jurisdiction Code",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "jurisTypeId":{
                    "description":"Jurisdiction Type Id",
                    "enum":[
                        "STA",
                        "CTY",
                        "CIT",
                        "STJ",
                        "CNT"
                    ],
                    "type":"string"
                },
                "taxCodeId":{
                    "format":"int32",
                    "description":"Tax Code Id",
                    "type":"integer"
                },
                "taxCode":{
                    "description":"Tax Code",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "customerUsageType":{
                    "description":"Customer Usage Type",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "taxTypeId":{
                    "description":"Tax Type Id",
                    "enum":[
                        "All",
                        "BothSalesAndUseTax",
                        "ConsumerUseTax",
                        "MedicalExcise",
                        "Fee",
                        "VATInputTax",
                        "VATNonrecoverableInputTax",
                        "VATOutputTax",
                        "Rental",
                        "SalesTax",
                        "UseTax"
                    ],
                    "type":"string"
                },
                "rateTypeId":{
                    "description":"Rate Type Id",
                    "enum":[
                        "ReducedA",
                        "ReducedB",
                        "Food",
                        "General",
                        "IncreasedStandard",
                        "LinenRental",
                        "Medical",
                        "Parking",
                        "SuperReduced",
                        "ReducedR",
                        "Standard",
                        "Zero"
                    ],
                    "type":"string"
                },
                "taxRuleTypeId":{
                    "description":"Tax Rule Type Id",
                    "enum":[
                        "RateRule",
                        "RateOverrideRule",
                        "BaseRule",
                        "ExemptEntityRule",
                        "ProductTaxabilityRule",
                        "NexusRule"
                    ],
                    "type":"string"
                },
                "isAllJuris":{
                    "description":"Is All Juris",
                    "type":"boolean"
                },
                "value":{
                    "format":"double",
                    "description":"Value",
                    "type":"number"
                },
                "cap":{
                    "format":"double",
                    "description":"Cap",
                    "type":"number"
                },
                "threshold":{
                    "format":"double",
                    "description":"Threshold",
                    "type":"number"
                },
                "options":{
                    "description":"Options",
                    "maxLength":100,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"Effective Date",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"End Date",
                    "type":"string"
                },
                "description":{
                    "description":"Description",
                    "maxLength":255,
                    "minLength":0,
                    "type":"string"
                },
                "countyFIPS":{
                    "description":"County FIPS",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "isSTPro":{
                    "description":"Is STPro",
                    "type":"boolean"
                },
                "country":{
                    "description":"Country",
                    "maxLength":2,
                    "minLength":0,
                    "type":"string"
                },
                "region":{
                    "description":"Region",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "sourcing":{
                    "description":"Sourcing",
                    "enum":[
                        "Destination",
                        "Origin"
                    ],
                    "type":"string"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "UPCModel":{
            "description":"UPC Model",
            "required":[
                "upc",
                "description"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "companyId":{
                    "format":"int32",
                    "description":"CompanyId",
                    "type":"integer"
                },
                "upc":{
                    "description":"UPC",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "legacyTaxCode":{
                    "description":"Legacy Tax Code",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "description":{
                    "description":"Description",
                    "maxLength":255,
                    "minLength":0,
                    "type":"string"
                },
                "effectiveDate":{
                    "format":"date-time",
                    "description":"Effective Date",
                    "type":"string"
                },
                "endDate":{
                    "format":"date-time",
                    "description":"End Date",
                    "type":"string"
                },
                "usage":{
                    "format":"int32",
                    "description":"Usage",
                    "type":"integer"
                },
                "isSystem":{
                    "format":"int32",
                    "description":"IsSystem",
                    "type":"integer"
                },
                "createdDate":{
                    "format":"date-time",
                    "description":"The date when this record was created (read only)",
                    "type":"string"
                },
                "createdUserId":{
                    "format":"int32",
                    "description":"The User ID of the user who created this record (read only)",
                    "type":"integer"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                }
            }
        },
        "FetchResult[CompanyModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CompanyModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "CompanyInitializationModel":{
            "description":"Company Initialization Model",
            "required":[
                "name",
                "companyCode",
                "line1",
                "city",
                "region",
                "postalCode",
                "country",
                "firstName",
                "lastName",
                "email",
                "phoneNumber"
            ],
            "type":"object",
            "properties":{
                "name":{
                    "description":"Company Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "companyCode":{
                    "description":"Company Code - used to distinguish between companies within your accounting system",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "vatRegistrationId":{
                    "description":"Vat Registration Id - leave blank if not known.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "taxpayerIdNumber":{
                    "description":"United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your Social Security Number if you are an individual.",
                    "maxLength":11,
                    "minLength":0,
                    "type":"string"
                },
                "line1":{
                    "description":"Address Line1",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line2":{
                    "description":"Line2",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "line3":{
                    "description":"Line3",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "city":{
                    "description":"City",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "region":{
                    "description":"Region",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "postalCode":{
                    "description":"Postal Code",
                    "maxLength":10,
                    "minLength":0,
                    "type":"string"
                },
                "country":{
                    "description":"Country",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "firstName":{
                    "description":"First Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "lastName":{
                    "description":"Last Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "title":{
                    "description":"Title",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "email":{
                    "description":"Email",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "phoneNumber":{
                    "description":"Phone Number",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "mobileNumber":{
                    "description":"Mobile Number",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "faxNumber":{
                    "description":"Fax Number",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                }
            }
        },
        "FetchResult[ContactModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ContactModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[NexusModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/NexusModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[TaxCodeModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxCodeModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[SubscriptionTypeModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SubscriptionTypeModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "SubscriptionTypeModel":{
            "description":"Subscription Type Model",
            "required":[
                "description"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "description":{
                    "description":"Description",
                    "maxLength":255,
                    "minLength":0,
                    "type":"string"
                }
            }
        },
        "FetchResult[TaxAuthorityModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxAuthorityModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "TaxAuthorityModel":{
            "description":"Tax Authority Model",
            "required":[
                "name"
            ],
            "type":"object",
            "properties":{
                "id":{
                    "format":"int32",
                    "description":"Id",
                    "type":"integer"
                },
                "name":{
                    "description":"Name",
                    "maxLength":128,
                    "minLength":0,
                    "type":"string"
                },
                "taxAuthorityTypeId":{
                    "format":"int32",
                    "description":"Tax Authority Type Id",
                    "type":"integer"
                },
                "jurisdictionId":{
                    "format":"int32",
                    "description":"Jurisdiction Id",
                    "type":"integer"
                }
            }
        },
        "FetchResult[TaxAuthorityFormModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxAuthorityFormModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "TaxAuthorityFormModel":{
            "description":"Tax Authority Form Model",
            "required":[
                "formName"
            ],
            "type":"object",
            "properties":{
                "taxAuthorityId":{
                    "format":"int32",
                    "description":"Tax Authority Id",
                    "type":"integer"
                },
                "formName":{
                    "description":"Form Name",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                }
            }
        },
        "FetchResult[FilingCalendarModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/FilingCalendarModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[ItemModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ItemModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[LocationModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/LocationModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "PasswordChangeModel":{
            "description":"Password Change Model",
            "required":[
                "oldPassword",
                "newPassword"
            ],
            "type":"object",
            "properties":{
                "oldPassword":{
                    "description":"Old Password",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "newPassword":{
                    "description":"New Password",
                    "maxLength":50,
                    "minLength":8,
                    "type":"string"
                }
            }
        },
        "FetchResult[SettingModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SettingModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[SubscriptionModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SubscriptionModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "TaxRateModel":{
            "description":"Tax Rate Model",
            "type":"object",
            "properties":{
                "totalRate":{
                    "format":"double",
                    "description":"Total Rate",
                    "type":"number"
                },
                "rates":{
                    "description":"Rates",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/RateModel"
                    }
                }
            }
        },
        "RateModel":{
            "description":"Rate Model",
            "type":"object",
            "properties":{
                "rate":{
                    "format":"double",
                    "description":"Rate",
                    "type":"number"
                },
                "name":{
                    "description":"Name",
                    "type":"string"
                },
                "type":{
                    "description":"Type",
                    "enum":[
                        "Country",
                        "Composite",
                        "State",
                        "County",
                        "City",
                        "Special"
                    ],
                    "type":"string"
                }
            }
        },
        "FetchResult[TaxRuleModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxRuleModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "TransactionModel":{
            "description":"A single transaction - for example, a sales invoice or purchase order",
            "type":"object",
            "properties":{
                "id":{
                    "format":"int64",
                    "description":"DocumentId",
                    "type":"integer"
                },
                "code":{
                    "description":"DocumentCode",
                    "type":"string"
                },
                "date":{
                    "format":"date-time",
                    "description":"DocumentDate",
                    "type":"string"
                },
                "taxDate":{
                    "format":"date-time",
                    "description":"TaxDate",
                    "type":"string"
                },
                "paymentDate":{
                    "format":"date-time",
                    "description":"PaymentDate",
                    "type":"string"
                },
                "status":{
                    "description":"DocumentStatusId",
                    "enum":[
                        "Temporary",
                        "Saved",
                        "Posted",
                        "Committed",
                        "Cancelled",
                        "Adjusted",
                        "Queued",
                        "PendingApproval",
                        "Any"
                    ],
                    "type":"string"
                },
                "type":{
                    "description":"DocumentTypeId",
                    "enum":[
                        "SalesOrder",
                        "SalesInvoice",
                        "PurchaseOrder",
                        "PurchaseInvoice",
                        "ReturnOrder",
                        "ReturnInvoice",
                        "InventoryTransferOrder",
                        "InventoryTransferInvoice",
                        "ReverseChargeOrder",
                        "ReverseChargeInvoice",
                        "Any"
                    ],
                    "type":"string"
                },
                "companyId":{
                    "format":"int32",
                    "description":"CompanyId",
                    "type":"integer"
                },
                "batchCode":{
                    "description":"BatchCode",
                    "type":"string"
                },
                "currencyCode":{
                    "description":"CurrencyCode",
                    "type":"string"
                },
                "customerUsageType":{
                    "description":"CustomerUsageType",
                    "type":"string"
                },
                "customerVendorCode":{
                    "description":"CustomerVendorCode",
                    "type":"string"
                },
                "exemptNo":{
                    "description":"ExemptNo",
                    "type":"string"
                },
                "reconciled":{
                    "description":"IsReconciled",
                    "type":"boolean"
                },
                "locationCode":{
                    "description":"LocationCode",
                    "type":"string"
                },
                "purchaseOrderNo":{
                    "description":"PurchaseOrderNo",
                    "type":"string"
                },
                "referenceCode":{
                    "description":"ReferenceCode",
                    "type":"string"
                },
                "salespersonCode":{
                    "description":"SalespersonCode",
                    "type":"string"
                },
                "taxOverrideType":{
                    "description":"TaxOverrideTypeId",
                    "enum":[
                        "None",
                        "TaxAmount",
                        "Exemption",
                        "TaxDate",
                        "AccruedTaxAmount"
                    ],
                    "type":"string"
                },
                "taxOverrideAmount":{
                    "format":"double",
                    "description":"TaxOverrideAmount",
                    "type":"number"
                },
                "taxOverrideReason":{
                    "description":"TaxOverrideReason",
                    "type":"string"
                },
                "totalAmount":{
                    "format":"double",
                    "description":"TotalAmount",
                    "type":"number"
                },
                "totalExempt":{
                    "format":"double",
                    "description":"TotalExempt",
                    "type":"number"
                },
                "totalTax":{
                    "format":"double",
                    "description":"TotalTax",
                    "type":"number"
                },
                "totalTaxable":{
                    "format":"double",
                    "description":"TotalTaxable",
                    "type":"number"
                },
                "totalTaxCalculated":{
                    "format":"double",
                    "description":"TotalTaxCalculated",
                    "type":"number"
                },
                "adjustmentReason":{
                    "description":"AdjustmentReasonId",
                    "enum":[
                        "NotAdusted",
                        "SourcingIssue",
                        "ReconciledWithGeneralLedger",
                        "ExemptCertApplied",
                        "PriceAdjusted",
                        "ProductReturned",
                        "ProductExchanged",
                        "BadDebt",
                        "Other",
                        "Offline"
                    ],
                    "type":"string"
                },
                "adjustmentDescription":{
                    "description":"AdjustmentDescription",
                    "type":"string"
                },
                "locked":{
                    "description":"IsLocked",
                    "type":"boolean"
                },
                "region":{
                    "description":"Region",
                    "type":"string"
                },
                "country":{
                    "description":"Country",
                    "type":"string"
                },
                "version":{
                    "format":"int32",
                    "description":"Version",
                    "type":"integer"
                },
                "softwareVersion":{
                    "description":"SoftwareVersion",
                    "type":"string"
                },
                "originAddressId":{
                    "format":"int64",
                    "description":"OriginAddressId",
                    "type":"integer"
                },
                "destinationAddressId":{
                    "format":"int64",
                    "description":"DestinationAddressId",
                    "type":"integer"
                },
                "exchangeRateEffectiveDate":{
                    "format":"date-time",
                    "description":"ExchangeRateEffDate",
                    "type":"string"
                },
                "exchangeRate":{
                    "format":"double",
                    "description":"ExchangeRate",
                    "type":"number"
                },
                "isSellerImporterOfRecord":{
                    "description":"IsSellerImporterOfRecord",
                    "type":"boolean"
                },
                "description":{
                    "description":"Description",
                    "type":"string"
                },
                "email":{
                    "description":"Email",
                    "type":"string"
                },
                "brBuyerType":{
                    "description":"BRBuyerType",
                    "type":"string"
                },
                "brBuyer_IsExemptOrCannotWH_IRRF":{
                    "description":"BRBuyer_IsExemptOrCannotWH_IRRF",
                    "type":"boolean"
                },
                "brBuyer_IsExemptOrCannotWH_PISRF":{
                    "description":"BRBuyer_IsExemptOrCannotWH_PISRF",
                    "type":"boolean"
                },
                "brBuyer_IsExemptOrCannotWH_COFINSRF":{
                    "description":"BRBuyer_IsExemptOrCannotWH_COFINSRF",
                    "type":"boolean"
                },
                "brBuyer_IsExemptOrCannotWH_CSLLRF":{
                    "description":"BRBuyer_IsExemptOrCannotWH_CSLLRF",
                    "type":"boolean"
                },
                "brBuyer_IsExempt_PIS":{
                    "description":"BRBuyer_IsExempt_PIS",
                    "type":"boolean"
                },
                "brBuyer_IsExempt_COFINS":{
                    "description":"BRBuyer_IsExempt_COFINS",
                    "type":"boolean"
                },
                "brBuyer_IsExempt_CSLL":{
                    "description":"BRBuyer_IsExempt_CSLL",
                    "type":"boolean"
                },
                "modifiedDate":{
                    "format":"date-time",
                    "description":"The date/time when this record was last modified (read only)",
                    "type":"string"
                },
                "modifiedUserId":{
                    "format":"int32",
                    "description":"The user ID of the user who last modified this record (read only)",
                    "type":"integer"
                },
                "lines":{
                    "description":"A list of lines in this transaction",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TransactionLineModel"
                    }
                },
                "addresses":{
                    "description":"A list of addresses used in this transaction",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TransactionAddressModel"
                    }
                }
            }
        },
        "TransactionLineModel":{
            "description":"One line item on this transaction",
            "type":"object",
            "properties":{
                "id":{
                    "format":"int64",
                    "description":"DocumentLineId",
                    "type":"integer"
                },
                "transactionId":{
                    "format":"int64",
                    "description":"DocumentId",
                    "type":"integer"
                },
                "lineNumber":{
                    "description":"LineNo",
                    "type":"string"
                },
                "method":{
                    "description":"AccountingMethodId",
                    "enum":[
                        "Accrual",
                        "Cash"
                    ],
                    "type":"string"
                },
                "boundaryOverrideId":{
                    "format":"int32",
                    "description":"BoundaryOverrideId",
                    "type":"integer"
                },
                "customerUsageType":{
                    "description":"CustomerUsageType",
                    "type":"string"
                },
                "description":{
                    "description":"Description",
                    "type":"string"
                },
                "destinationAddressId":{
                    "format":"int64",
                    "description":"DestinationAddressId",
                    "type":"integer"
                },
                "discountAmount":{
                    "format":"double",
                    "description":"DiscountAmount",
                    "type":"number"
                },
                "discountTypeId":{
                    "format":"int32",
                    "description":"DiscountTypeId",
                    "type":"integer"
                },
                "exemptAmount":{
                    "format":"double",
                    "description":"ExemptAmount",
                    "type":"number"
                },
                "exemptCertId":{
                    "format":"int32",
                    "description":"ExemptCertId",
                    "type":"integer"
                },
                "exemptNo":{
                    "description":"ExemptNo",
                    "type":"string"
                },
                "isItemTaxable":{
                    "description":"IsItemTaxable",
                    "type":"boolean"
                },
                "isSSTP":{
                    "description":"IsSSTP",
                    "type":"boolean"
                },
                "itemCode":{
                    "description":"ItemCode",
                    "type":"string"
                },
                "lineAmount":{
                    "format":"double",
                    "description":"LineAmount",
                    "type":"number"
                },
                "originAddressId":{
                    "format":"int64",
                    "description":"OriginAddressId",
                    "type":"integer"
                },
                "quantity":{
                    "format":"double",
                    "description":"Quantity",
                    "type":"number"
                },
                "ref1":{
                    "description":"Ref1",
                    "type":"string"
                },
                "ref2":{
                    "description":"Ref2",
                    "type":"string"
                },
                "reportingDate":{
                    "format":"date-time",
                    "description":"ReportingDate",
                    "type":"string"
                },
                "revAccount":{
                    "description":"RevAccount",
                    "type":"string"
                },
                "sourcing":{
                    "description":"Sourcing",
                    "enum":[
                        "Destination",
                        "Origin"
                    ],
                    "type":"string"
                },
                "tax":{
                    "format":"double",
                    "description":"Tax",
                    "type":"number"
                },
                "taxableAmount":{
                    "format":"double",
                    "description":"TaxableAmount",
                    "type":"number"
                },
                "taxCalculated":{
                    "format":"double",
                    "description":"TaxCalculated",
                    "type":"number"
                },
                "taxCode":{
                    "description":"TaxCode",
                    "type":"string"
                },
                "taxCodeId":{
                    "format":"int32",
                    "description":"TaxCodeId",
                    "type":"integer"
                },
                "taxDate":{
                    "format":"date-time",
                    "description":"TaxDate",
                    "type":"string"
                },
                "taxEngine":{
                    "description":"TaxEngine",
                    "type":"string"
                },
                "taxOverrideType":{
                    "description":"TaxOverrideTypeId",
                    "enum":[
                        "None",
                        "TaxAmount",
                        "Exemption",
                        "TaxDate",
                        "AccruedTaxAmount"
                    ],
                    "type":"string"
                },
                "taxOverrideAmount":{
                    "format":"double",
                    "description":"TaxOverrideAmount",
                    "type":"number"
                },
                "taxOverrideReason":{
                    "description":"TaxOverrideReason",
                    "type":"string"
                },
                "taxIncluded":{
                    "description":"TaxIncluded",
                    "type":"boolean"
                },
                "details":{
                    "description":"Details",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TransactionLineDetailModel"
                    }
                }
            }
        },
        "TransactionAddressModel":{
            "description":"An address used within this transaction",
            "type":"object",
            "properties":{
                "id":{
                    "format":"int64",
                    "description":"DocumentAddressId",
                    "type":"integer"
                },
                "transactionId":{
                    "format":"int64",
                    "description":"DocumentId",
                    "type":"integer"
                },
                "boundaryLevel":{
                    "description":"BoundaryLevel",
                    "enum":[
                        "Address",
                        "Zip9",
                        "Zip5"
                    ],
                    "type":"string"
                },
                "line1":{
                    "description":"AddressLine1",
                    "type":"string"
                },
                "line2":{
                    "description":"AddressLine2",
                    "type":"string"
                },
                "line3":{
                    "description":"AddressLine3",
                    "type":"string"
                },
                "city":{
                    "description":"City",
                    "type":"string"
                },
                "region":{
                    "description":"Region",
                    "type":"string"
                },
                "postalCode":{
                    "description":"PostalCode",
                    "type":"string"
                },
                "country":{
                    "description":"Country",
                    "type":"string"
                },
                "taxRegionId":{
                    "format":"int32",
                    "description":"TaxRegionId",
                    "type":"integer"
                }
            }
        },
        "TransactionLineDetailModel":{
            "description":"An individual tax detail element for this line",
            "type":"object",
            "properties":{
                "id":{
                    "format":"int64",
                    "description":"DocumentLineDetailId",
                    "type":"integer"
                },
                "transactionLineId":{
                    "format":"int64",
                    "description":"DocumentLineId",
                    "type":"integer"
                },
                "transactionId":{
                    "format":"int64",
                    "description":"DocumentId",
                    "type":"integer"
                },
                "addressId":{
                    "format":"int64",
                    "description":"AddressId",
                    "type":"integer"
                },
                "country":{
                    "description":"Country",
                    "type":"string"
                },
                "region":{
                    "description":"Region",
                    "type":"string"
                },
                "countyFIPS":{
                    "description":"CountyFips",
                    "type":"string"
                },
                "stateFIPS":{
                    "description":"StateFips",
                    "type":"string"
                },
                "exemptAmount":{
                    "format":"double",
                    "description":"ExemptAmount",
                    "type":"number"
                },
                "exemptReasonId":{
                    "format":"int32",
                    "description":"ExemptReasonId",
                    "type":"integer"
                },
                "inState":{
                    "description":"InState",
                    "type":"boolean"
                },
                "jurisCode":{
                    "description":"JurisCode",
                    "type":"string"
                },
                "jurisName":{
                    "description":"JurisName",
                    "type":"string"
                },
                "jurisdictionId":{
                    "format":"int32",
                    "description":"JurisdictionId",
                    "type":"integer"
                },
                "jurisType":{
                    "description":"JurisTypeId",
                    "enum":[
                        "STA",
                        "CTY",
                        "CIT",
                        "STJ",
                        "CNT"
                    ],
                    "type":"string"
                },
                "nonTaxableAmount":{
                    "format":"double",
                    "description":"NonTaxableAmount",
                    "type":"number"
                },
                "nonTaxableRuleId":{
                    "format":"int32",
                    "description":"NonTaxableRuleId",
                    "type":"integer"
                },
                "nonTaxableType":{
                    "description":"NonTaxableTypeId",
                    "enum":[
                        "RateRule",
                        "RateOverrideRule",
                        "BaseRule",
                        "ExemptEntityRule",
                        "ProductTaxabilityRule",
                        "NexusRule"
                    ],
                    "type":"string"
                },
                "rate":{
                    "format":"double",
                    "description":"Rate",
                    "type":"number"
                },
                "rateRuleId":{
                    "format":"int32",
                    "description":"RateRuleId",
                    "type":"integer"
                },
                "rateSourceId":{
                    "format":"int32",
                    "description":"RateSourceId",
                    "type":"integer"
                },
                "signatureCode":{
                    "description":"SignatureCode",
                    "type":"string"
                },
                "serCode":{
                    "description":"SERCode",
                    "type":"string"
                },
                "sourcing":{
                    "description":"Sourcing",
                    "enum":[
                        "Destination",
                        "Origin"
                    ],
                    "type":"string"
                },
                "stateAssignedNo":{
                    "description":"StateAssignedNo",
                    "type":"string"
                },
                "tax":{
                    "format":"double",
                    "description":"Tax",
                    "type":"number"
                },
                "taxableAmount":{
                    "format":"double",
                    "description":"TaxableAmount",
                    "type":"number"
                },
                "taxType":{
                    "description":"TaxTypeId",
                    "enum":[
                        "ConsumerUse",
                        "Excise",
                        "Fee",
                        "Input",
                        "Nonrecoverable",
                        "Output",
                        "Rental",
                        "Sales",
                        "Use"
                    ],
                    "type":"string"
                },
                "taxName":{
                    "description":"TaxName",
                    "type":"string"
                },
                "taxAuthorityTypeId":{
                    "format":"int32",
                    "description":"TaxAuthorityTypeId",
                    "type":"integer"
                },
                "taxRegionId":{
                    "format":"int32",
                    "description":"TaxRegionId",
                    "type":"integer"
                },
                "taxCalculated":{
                    "format":"double",
                    "description":"TaxCalculated",
                    "type":"number"
                },
                "taxOverride":{
                    "format":"double",
                    "description":"TaxOverride",
                    "type":"number"
                },
                "rateType":{
                    "description":"RateTypeId",
                    "enum":[
                        "ReducedA",
                        "ReducedB",
                        "Food",
                        "General",
                        "IncreasedStandard",
                        "LinenRental",
                        "Medical",
                        "Parking",
                        "SuperReduced",
                        "ReducedR",
                        "Standard",
                        "Zero"
                    ],
                    "type":"string"
                }
            }
        },
        "FetchResult[TransactionModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TransactionModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "AdjustTransactionModel":{
            "description":"A request to adjust tax for a previously existing transaction",
            "type":"object",
            "properties":{
                "adjustmentReason":{
                    "description":"A reason code indicating why this adjustment was made",
                    "enum":[
                        "NotAdusted",
                        "SourcingIssue",
                        "ReconciledWithGeneralLedger",
                        "ExemptCertApplied",
                        "PriceAdjusted",
                        "ProductReturned",
                        "ProductExchanged",
                        "BadDebt",
                        "Other",
                        "Offline"
                    ],
                    "type":"string"
                },
                "adjustmentDescription":{
                    "description":"If the AdjustmentReason is \"Other\", specify the reason here",
                    "type":"string"
                },
                "newTransaction":{
                    "$ref":"#/definitions/CreateTransactionModel",
                    "description":"Replace the current transaction with tax data calculated for this new transaction"
                }
            }
        },
        "CreateTransactionModel":{
            "description":"Create a transaction",
            "required":[
                "companyCode",
                "code",
                "date"
            ],
            "type":"object",
            "properties":{
                "companyCode":{
                    "description":"Company Code - The client application company reference code.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "type":{
                    "description":"Document Type",
                    "enum":[
                        "SalesOrder",
                        "SalesInvoice",
                        "PurchaseOrder",
                        "PurchaseInvoice",
                        "ReturnOrder",
                        "ReturnInvoice",
                        "InventoryTransferOrder",
                        "InventoryTransferInvoice",
                        "ReverseChargeOrder",
                        "ReverseChargeInvoice",
                        "Any"
                    ],
                    "type":"string"
                },
                "code":{
                    "description":"Transaction Code - the internal reference code used by the client application.  This is used for operations such as\r\n                Post and GetTaxHistory.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "date":{
                    "format":"date-time",
                    "description":"Transaction Date - The date on the invoice, purchase order, etc.",
                    "type":"string"
                },
                "salespersonCode":{
                    "description":"Salesperson Code - The client application salesperson reference code.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "customerCode":{
                    "description":"Customer Code - The client application customer reference code.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "customerUsageType":{
                    "description":"Customer Usage Type - The client application customer or usage type.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "discount":{
                    "format":"double",
                    "description":"Discount - The discount amount to apply to the document.",
                    "type":"number"
                },
                "purchaseOrderNo":{
                    "description":"Purchase Order Number for this document",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "exemptionNo":{
                    "description":"Exemption Number for this document",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "addresses":{
                    "description":"Default addresses for all lines in this document",
                    "type":"object",
                    "properties":{
                        "Unknown":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "ShipFrom":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "ShipTo":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "PointOfOrderAcceptance":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "PointOfOrderOrigin":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "SingleLocation":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "Other":{
                            "$ref":"#/definitions/AddressInfo"
                        }
                    }
                },
                "lines":{
                    "description":"Document line items list",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/LineItemModel"
                    }
                },
                "referenceCode":{
                    "description":"Reference Code used to reference the original document for a return invoice",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "hashCode":{
                    "format":"int32",
                    "description":"The hash code is computed by the client to determine whether any changes have occured\r\n                since taxes were calculated.",
                    "type":"integer"
                },
                "reportingLocationCode":{
                    "description":"Sets the sale location code (Outlet ID) for reporting this document to the tax authority.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "commit":{
                    "description":"Causes the document to be committed if true.",
                    "type":"boolean"
                },
                "batchCode":{
                    "description":"BatchCode for batch operations.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "taxOverride":{
                    "$ref":"#/definitions/TaxOverrideModel",
                    "description":"Specifies a tax override for the entire document"
                },
                "taxDate":{
                    "format":"date-time",
                    "description":"Indicates the tax effectivity override date for the entire document.",
                    "type":"string"
                },
                "currencyCode":{
                    "description":"3 character ISO 4217 currency code.",
                    "maxLength":3,
                    "minLength":0,
                    "type":"string"
                },
                "serviceMode":{
                    "description":"Specifies whether the tax calculation is handled Local, Remote, or Automatic (default)",
                    "enum":[
                        "Automatic",
                        "Local",
                        "Remote"
                    ],
                    "type":"string"
                },
                "paymentDate":{
                    "format":"date-time",
                    "description":"Indicates the date payment was applied to this document.  This is only for cash basis accounting.",
                    "type":"string"
                },
                "exchangeRate":{
                    "format":"double",
                    "description":"Currency exchange rate from this transaction to the company base currency.",
                    "type":"number"
                },
                "exchangeRateEffectiveDate":{
                    "format":"date-time",
                    "description":"Effective date of the exchange rate.",
                    "type":"string"
                },
                "posLaneCode":{
                    "description":"Sets the POS Lane Code sent by the User for this document.",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "businessIdentificationNo":{
                    "description":"BusinessIdentificationNo",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "isSellerImporterOfRecord":{
                    "description":"Specifies if the Transaction has the seller as IsSellerImporterOfRecord",
                    "type":"boolean"
                },
                "description":{
                    "description":"Description",
                    "maxLength":2048,
                    "minLength":0,
                    "type":"string"
                },
                "email":{
                    "description":"Email",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                }
            }
        },
        "LineItemModel":{
            "description":"Represents one line item in a transaction",
            "required":[
                "quantity",
                "amount"
            ],
            "type":"object",
            "properties":{
                "number":{
                    "description":"Line number within this document",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "quantity":{
                    "format":"double",
                    "description":"Quantity of items in this line",
                    "type":"number"
                },
                "amount":{
                    "format":"double",
                    "description":"Total amount for this line",
                    "type":"number"
                },
                "addresses":{
                    "description":"Specify any differences for addresses between this line and the rest of the document",
                    "type":"object",
                    "properties":{
                        "Unknown":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "ShipFrom":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "ShipTo":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "PointOfOrderAcceptance":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "PointOfOrderOrigin":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "SingleLocation":{
                            "$ref":"#/definitions/AddressInfo"
                        },
                        "Other":{
                            "$ref":"#/definitions/AddressInfo"
                        }
                    }
                },
                "taxCode":{
                    "description":"Tax Code - System or Custom Tax Code.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "customerUsageType":{
                    "description":"Customer Usage Type - The client application customer or usage type.",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "itemCode":{
                    "description":"Item Code (SKU)",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "exemptionCode":{
                    "description":"Exemption number for this line",
                    "type":"string"
                },
                "discounted":{
                    "description":"True if the document discount should be applied to this line",
                    "type":"boolean"
                },
                "taxIncluded":{
                    "description":"Indicates if line has Tax Included; defaults to false",
                    "type":"boolean"
                },
                "revenueAccount":{
                    "description":"Revenue Account",
                    "maxLength":50,
                    "minLength":0,
                    "type":"string"
                },
                "ref1":{
                    "description":"Reference 1 - Client specific reference field",
                    "maxLength":250,
                    "minLength":0,
                    "type":"string"
                },
                "ref2":{
                    "description":"Reference 2 - Client specific reference field",
                    "maxLength":250,
                    "minLength":0,
                    "type":"string"
                },
                "description":{
                    "description":"Item description.  This is required for SST transactions if an unmapped ItemCode is used.",
                    "maxLength":2096,
                    "minLength":0,
                    "type":"string"
                },
                "businessIdentificationNo":{
                    "description":"BusinessIdentificationNo",
                    "maxLength":25,
                    "minLength":0,
                    "type":"string"
                },
                "taxOverride":{
                    "$ref":"#/definitions/TaxOverrideModel",
                    "description":"Specifies a tax override for this line"
                }
            }
        },
        "TaxOverrideModel":{
            "description":"Represents a tax override for a transaction",
            "type":"object",
            "properties":{
                "type":{
                    "description":"Identifies the type of tax override",
                    "enum":[
                        "None",
                        "TaxAmount",
                        "Exemption",
                        "TaxDate",
                        "AccruedTaxAmount",
                        "DeriveTaxable"
                    ],
                    "type":"string"
                },
                "taxAmount":{
                    "format":"double",
                    "description":"Indicates a total override of the calculated tax on the document.  AvaTax will distribute\r\n                the override across all the lines.",
                    "type":"number"
                },
                "taxDate":{
                    "format":"date-time",
                    "description":"The override tax date to use",
                    "type":"string"
                },
                "reason":{
                    "description":"This provides the reason for a tax override for audit purposes.  It is required for types 2-4.",
                    "type":"string"
                }
            }
        },
        "CommitTransactionModel":{
            "description":"Commit this transaction as permanent",
            "type":"object",
            "properties":{
                "newTransactionCode":{
                    "description":"If you wish to change the transaction code when committing the transaction, specify the new transaction code here.",
                    "type":"string"
                }
            }
        },
        "CancelTransactionModel":{
            "description":"A request to cancel a previously created transaction",
            "type":"object",
            "properties":{
                "code":{
                    "description":"Please specify the reason for cancelling this transaction",
                    "enum":[
                        "Unspecified",
                        "PostFailed",
                        "DocDeleted",
                        "DocVoided",
                        "AdjustmentCancelled"
                    ],
                    "type":"string"
                }
            }
        },
        "PostTransactionModel":{
            "description":"Change the status of tax",
            "type":"object",
            "properties":{
                "verifyTransactionDate":{
                    "format":"date-time",
                    "description":"Transaction Date - The date on the invoice, purchase order, etc.",
                    "type":"string"
                },
                "verifyTotalAmount":{
                    "format":"double",
                    "description":"Total Amount - The total amount (not including tax) for the document.",
                    "type":"number"
                },
                "verifyTotalTax":{
                    "format":"double",
                    "description":"Total Tax - The total tax for the document.",
                    "type":"number"
                },
                "verifyHashCode":{
                    "format":"int32",
                    "description":"The hash code for the document.",
                    "type":"integer"
                },
                "commitTransaction":{
                    "description":"Allows committing immediately rather than requiring a subsequent call to CommitTax.",
                    "type":"boolean"
                },
                "newTransactionCode":{
                    "description":"If you wish to change the transaction code when committing the transaction, specify the new transaction code here.",
                    "type":"string"
                }
            }
        },
        "FetchResult[UPCModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/UPCModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "FetchResult[UserModel]":{
            "description":"Represents a fetch result",
            "type":"object",
            "properties":{
                "@recordsetCount":{
                    "format":"int32",
                    "description":"The number of rows returned by your query, prior to pagination.",
                    "type":"integer"
                },
                "value":{
                    "description":"The paginated and filtered list of records matching the parameters you supplied.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/UserModel"
                    }
                },
                "@nextLink":{
                    "description":"The link to the next page of results",
                    "type":"string"
                }
            }
        },
        "UserEntitlementModel":{
            "description":"User Entitlement Model",
            "type":"object",
            "properties":{
                "permissions":{
                    "description":"Permissions",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "company":{
                    "description":"Company",
                    "type":"string"
                },
                "companies":{
                    "description":"Companies",
                    "type":"array",
                    "items":{
                        "format":"int32",
                        "type":"integer"
                    }
                }
            }
        },
        "PingResultModel":{
            "description":"Ping Result Model",
            "type":"object",
            "properties":{
                "version":{
                    "description":"Version number",
                    "type":"string"
                }
            }
        },
        "CheckServiceAuthorizedModel":{
            "description":"Check Service Authorized Model",
            "required":[
                "serviceTypeId",
                "forDate"
            ],
            "type":"object",
            "properties":{
                "serviceTypeId":{
                    "description":"Service Type Id",
                    "enum":[
                        "None",
                        "AvaTaxST",
                        "AvaTaxPro",
                        "AvaTaxGlobal",
                        "AutoAddress",
                        "AutoReturns",
                        "TaxSolver",
                        "AvaTaxCsp",
                        "Twe",
                        "Mrs",
                        "AvaCert",
                        "AuthorizationPartner",
                        "CertCapture",
                        "AvaUpc",
                        "AvaCUT"
                    ],
                    "type":"string"
                },
                "forDate":{
                    "format":"date-time",
                    "description":"For Date",
                    "type":"string"
                }
            }
        }
    },
    "securityDefinitions":{
        "UserSecurity":{
            "type":"basic",
            "description":"Basic Username:Password HTTP authentication using Base64 encoding."
        },
        "ApiKeySecurity":{
            "name":"Authorization",
            "in":"header",
            "type":"apiKey",
            "description":"Basic AccountId:PrivateLicenseKey authentication using Base64 encoding.  This is identical to Username/Password authentication, except that you provide your AccountID as your username and your API key as your password."
        },
        "OauthSecurity":{
            "flow":"accessCode",
            "authorizationUrl":"http://doesnotexist.com//connect/authorize",
            "tokenUrl":"http://doesnotexist.com//connect/token",
            "type":"oauth2",
            "description":"A bearer token provided by the Avalara Identity server."
        }
    }
}
