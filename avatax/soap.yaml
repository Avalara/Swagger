swagger: '2.0'
info:
  description: "The AvaTax SOAP API exposes the most commonly used available for interacting with the AvaTax service, allowing calculation of tax, modification of documents, and validation of addresses. If you're unsure of which API to use, a full comparison of the differences between the functionality provided by our REST and SOAP interfaces is documented [here](http://developer.avalara.com/avatax/soap-or-rest/).
  
  The [REST API reference](http://developer.avalara.com/avatax/api-reference/tax/v1/) is also available.</p>"
  version: '1.0'
  title: AvaTax SOAP API
  termsOfService: 'http://www.avalara.com/terms/'
  contact:
    name: 'For support, visit the Avalara Community'
    url: 'https://community.avalara.com/avalara/category_sets/developers'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: development.avalara.net
basePath: /
schemes:
  - https
produces:
  - text/xml
consumes:
  - text/xml
x-ApiType: SOAP
x-wsdlPath: "https://development.avalara.net/Tax/TaxSvc.wsdl"
x-basePath: "https://development.avalara.net/Tax/TaxSvc.asmx"
paths:
  '/Tax/TaxSvc.asmx?GetTax':
    post:
      summary: Calculate Tax and Record a Document
      description: 'Calculates taxes on a document such as a sales order, sales invoice, purchase order, purchase invoice, or credit memo.'
      operationId: getTax
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/GetTax" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/GetTax\""`'
          x-example: "http://avatax.avalara.com/services/GetTax"
          type: string
        - in: body
          name: Envelope
          required: true
          schema: 
            $ref: '#/definitions/GetTaxEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema:
            $ref: '#/definitions/GetTaxResponse'
        '400':
          description: 'An Error Occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?PostTax':
    post:
      operationId: postTax
      summary: Post a Document
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/PostTax" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/PostTax\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/PostTax"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/PostTaxEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/PostTaxResponse'
        '400':
          description: 'An Error Occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?CommitTax':
    post:
      operationId: commitTax
      summary: Commit a Document
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/CommitTax" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/CommitTax\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/CommitTax"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/CommitTaxEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/CommitTaxResponse'
        '400':
          description: 'An Error Occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?CancelTax':
    post:
      operationId: cancelTax
      summary: Void a Document
      description: Voids or deletes and existing transaction record from the AvaTax system.
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/CancelTax" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/CancelTax\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/CancelTax"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/CancelTaxEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/CancelTaxResponse'
        '400':
          description: 'An Error Occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?AdjustTax':
    post:
      operationId: adjustTax
      summary: Adjust a Document
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/AdjustTax" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/AdjustTax\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/AdjustTax"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/AdjustTaxEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/AdjustTaxResponse'
        '400':
          description: 'An error occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?GetTaxHistory':
    post:
      operationId: getTaxHistory
      summary: Retrieve a Document
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/GetTaxHistory" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/GetTaxHistory\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/GetTaxHistory"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/GetTaxHistoryEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/GetTaxHistoryResponse'
        '400':
          description: 'An Error Occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?Ping':
    post:
      operationId: ping
      summary: Test Service Connectivity
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/Ping" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/Ping\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/Ping"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/PingEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/PingResponse'
        '400':
          description: 'An error occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?IsAuthorized':
    post:
      operationId: isAuthorized
      summary: Test Authorized Operations
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/IsAuthorized" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/IsAuthorized\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/IsAuthorized"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/IsAuthorizedEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/IsAuthorizedResponse'
        '400':
          description: 'An Error Occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?ApplyPayment':
    post:
      operationId: applyPayment
      deprecated: true
      summary: Change Payment Date (deprecated)
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/ApplyPayment" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/ApplyPayment\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/ApplyPayment"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/ApplyPaymentEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/ApplyPaymentResponse'
        '400':
          description: 'An error occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
  '/Tax/TaxSvc.asmx?ReconcileTaxHistory':
    post:
      operationId: reconcileTaxHistory
      summary: Mark Documents as Reconciled (deprecated)
      deprecated: true
      parameters:
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/ReconcileTaxHistory" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/ReconcileTaxHistory\""`'
          type: string
          x-example: "http://avatax.avalara.com/services/ReconcileTaxHistory"
        - in: body
          name: Envelope
          schema:
            $ref: '#/definitions/ReconcileTaxHistoryEnvelope'
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema: 
            $ref: '#/definitions/ReconcileTaxHistoryResponse'
        '400':
          description: 'An error occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'

  '/Address/AddressSvc.asmx?Validate':
    post:
      summary: Validate an Address
      description: 'Normalizes a single US or Canadian address, providing a non-ambiguous USPS address match.'
      operationId: validateAddress
      parameters: 
        - in: header
          name: SOAPAction
          required: true
          description: 'SOAPAction must be "http://avatax.avalara.com/services/Validate" for this operation: e.g. `--header "SOAPAction: \"http://avatax.avalara.com/services/Validate\"" `'
          type: string
          x-example: "http://avatax.avalara.com/services/Validate"
        - in: body
          name: Envelope
          required: true
          schema:
            $ref: "#/definitions/ValidateEnvelope"
      responses:
        '200':
          description: 'The operation was completed. Refer to the response property `ResultCode` to determine operation success or error.'
          schema:
            $ref: '#/definitions/ValidateResponse'
        '500':
          description: 'An error occurred. Check the error message text to find more information.'
          schema:
            $ref: '#/definitions/UnauthorizedError'
definitions:
  ApplyPaymentEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/ApplyPaymentBody'
  ApplyPaymentBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - ApplyPayment
    properties:
      ApplyPayment:
        title: ApplyPayment
        xml:
          namespace: "http://avatax.avalara.com/services"
        type: object
        properties: 
          ApplyPaymentRequest:
            $ref: '#/definitions/ApplyPaymentRequest' 
  ReconcileTaxHistoryEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/ReconcileTaxHistoryBody'
  ReconcileTaxHistoryBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - ReconcileTaxHistory
    properties:
      ReconcileTaxHistory:
        title: ReconcileTaxHistory
        xml:
          namespace: "http://avatax.avalara.com/services"
        type: object
        properties: 
          ReconcileTaxHistoryRequest:
            $ref: '#/definitions/ReconcileTaxHistoryRequest' 
  ReconcileTaxHistoryRequest:
    required:
      - Reconciled
      - StartDate
      - EndDate
      - DocStatus
      - DocType
      - LastDocCode
      - PageSize
    properties:
      CompanyCode:
        type: string
        description: "Client application company reference code. Not required if the documents are identified by `DocId`."
      LastDocId:
        type: string
        description: "Avatax-assigned unique document Id, can be used in place of `DocCode`, `DocType`, and `CompanyCode` to identify a range of documents."
      Reconciled:
        type: boolean
        description: "Allows previously reconciled documents to be ignored. Please note that documents currently cannot be set to the `Reconciled` status."
      StartDate:
        type: string
        description: "The starting document date for the range of documents desired. In the format YYYY-MM-DD."
      EndDate:
        type: string
        description: "The ending document date for the range of documents desired. In the format YYYY-MM-DD."
      DocStatus:
        type: string
        description: "Allows filtering of results by status. Possible statuses are: Saved, Posted, Comitted, Cancelled, Adjusted, Any."
      DocType:
        type: string
        description: "Value describing what type of tax document is being requested. One of: SalesInvoice, ReturnInvoice, PurchaseInvoice. Not required if the documents are identified by `DocId`."
      LastDocCode:
        type: string
        description: "Client application identifier describing this tax transaction (i.e. invoice number, sales order number, etc.) – specifies that this document and all more recent documents are desired. Not required if the documents are identified by `DocId`."
      PageSize:
        type: number
        format: integer
        description: "Allows for pagination and limitation of the number of results returned."
  ApplyPaymentRequest:
    required:
      - DocType
      - PaymentDate
    properties:
      CompanyCode:
        type: string
        description: "Client application company reference code. Not required if the documents are identified by `DocId`."
      DocType:
        type: string
        description: "Value describing what type of tax document is being requested. One of: SalesInvoice, ReturnInvoice, PurchaseInvoice. Not required if the documents are identified by `DocId`."
      DocCode:
        type: string
        description: "Client application identifier describing this tax transaction (i.e. invoice number, sales order number, etc.). Not required if the document is identified by `DocId`."
      PaymentDate:
        type: string
        description: "The desired payment date to be recorded on the specified document record."
      DocId:
        type: string
        description: "Avatax-assigned unique document ID, can be used in place of DocCode, DocType, and CompanyCode."
  ApplyPaymentResponse:
    properties:
      ApplyPaymentResult:
        type: object
        title: ApplyPaymentResult
        properties:
          DocId:
            type: string
            maxLength: 19
            description: The unique document ID assigned by AvaTax to the document modified. This value need only be retained for troubleshooting.
          TransactionId:
            type: string
            maxLength: 19
            description: The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  ReconcileTaxHistoryResponse:
    properties:
      ReconcileTaxHistoryResult:
        type: object
        title: ReconcileTaxHistoryResult
        properties:
          RecordCount:
            type: number
            format: integer
            description: "The number of records found that fit the filter criteria specified in the request."
          SearchTaxHistoryResult:
            type: object
            title: SearchTaxHistoryResult
            properties:
              GetTaxResults:
                type: array
                xml: 
                  wrapped: true
                items:
                  $ref: '#/definitions/GetTaxResult'
              LastDocId:
                type: string
                description: "Avatax-assigned unique document IDof the most recent document that was retrieved."
              LastDocCode:
                type: string
                description: "Client application identifier describing the most recent document that was retrieved."
              TransactionId:
                type: string
                maxLength: 19
                description: "The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting."
              ResultCode:
                $ref: '#/definitions/ResultCode'
              Messages:
                type: array
                xml:
                  wrapped: true
                items:
                  $ref: '#/definitions/Message'
  CommitTaxEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CommitTaxBody'
  CommitTaxBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - CommitTax
    properties:
      CommitTax:
        title: CommitTax
        xml: 
          namespace: "http://avatax.avalara.com/services"
        type: object
        properties:
          CommitTaxRequest:
            $ref: '#/definitions/CommitTaxRequest' 
  AdjustTaxEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/AdjustTaxBody'
  AdjustTaxBody:
    xml: 
      name: Body
      prefix: SOAP-ENV
    required:
      - AdjustTax
    properties:
      AdjustTax:
        title: AdjustTax
        type: object
        xml:
          namespace: "http://avatax.avalara.com/services"
        properties:
          AdjustTaxRequest:
            $ref: '#/definitions/AdjustTaxRequest' 
  GetTaxHistoryEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetTaxHistoryBody'
  GetTaxHistoryBody:
    xml: 
      name: Body
      prefix: SOAP-ENV
    required:
      - GetTaxHistory
    properties:
      GetTaxHistory:
        type: object
        title: GetTaxHistory
        xml:
          namespace: "http://avatax.avalara.com/services"
        properties:
          GetTaxHistoryRequest:
            $ref: '#/definitions/GetTaxHistoryRequest' 
  PingEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/PingBody'
  PingBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - Ping
    properties:
      Ping:
        $ref: '#/definitions/Ping' 
  IsAuthorizedEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/IsAuthorizedBody'
  IsAuthorizedBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - IsAuthorized
    properties:
      IsAuthorized:
        title: IsAuthorized
        xml:
          namespace: "http://avatax.avalara.com/services"
        type: object
        properties: 
          IsAuthorizedRequest:
            $ref: '#/definitions/IsAuthorizedRequest' 
  PostTaxEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/PostTaxBody'
  PostTaxBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - PostTax
    properties:
      PostTax:
        title: PostTax
        xml: 
          namespace: "http://avatax.avalara.com/services"
        type: object
        properties:
          PostTaxRequest:
            $ref: '#/definitions/PostTaxRequest' 
  ValidateEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: 'http://schemas.xmlsoap.org/soap/envelope/'
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/ValidateBody'
  ValidateBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - Validate
    properties:
      Validate:
        title: Validate
        xml:
          namespace: 'http://avatax.avalara.com/services'
        type: object
        properties:
          ValidateRequest:
            title: ValidateRequest
            required:
              - Address
            properties:
              Coordinates:
                type: boolean
                description: Indicates whether latitude and longitude values should be returned in the `ValidateResult` object. Default is `false`.
              Taxability:
                type: boolean
                description: Indicates whether the AvaTax `TaxRegionId` should be returned in the `ValidateResult` object. Default is `false`.
              TextCase:
                type: string
                description: "The casing to apply to the valid address(es) returned in the validation result. Default is `Mixed` case. Must be one of: Default, Mixed, Upper"
                example: Default
              Address:
                $ref: '#/definitions/Address'
  CancelTaxEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: 'http://schemas.xmlsoap.org/soap/envelope/'
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CancelTaxBody'
  CancelTaxBody:
    xml:
      name: Body
      prefix: SOAP-ENV
    required:
      - CancelTax
    properties:
      CancelTax:
        type: object
        title: CancelTax
        xml: 
          namespace: "http://avatax.avalara.com/services"
        properties:
          CancelTaxRequest:
            $ref: '#/definitions/CancelTaxRequest'  
  GetTaxEnvelope:
    xml:
      name: Envelope
      prefix: SOAP-ENV
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetTaxBody'
  GetTaxBody:
    xml: 
      name: Body
      prefix: SOAP-ENV
    required:
      - GetTax
    properties:
      GetTax:
        title: GetTax
        type: object
        xml: 
          namespace: "http://avatax.avalara.com/services"
        properties:
          GetTaxRequest:
            $ref: '#/definitions/GetTaxRequest'
  PostTaxRequest:
    required:
      - CompanyCode
      - DocCode
      - DocDate
      - DocType
      - TotalAmount
      - TotalTax
    properties:
      Commit:
        type: boolean
        description: If set to `true`, AvaTax will post and commit the document in one call.
      CompanyCode:
        type: string
        maxLength: 25
        description: The client application company reference code.
      DocCode:
        type: string
        maxLength: 50
        description: The internal reference code (invoice number) used by the client application.
      DocDate:
        type: string
        description: "The document date, i.e. the date on the invoice, purchase order, etc. In the format YYYY-MM-DD"
      DocType:
        type: string
        description: The original document's type, such as `SalesInvoice` or `PurchaseInvoice`.
      NewDocCode:
        type: string
        maxLength: 50
        description: New `DocumentCode` for the document if desired.
      TotalAmount:
        type: number
        format: decimal
        description: The total amount (not including tax) for the document.
      TotalTax:
        type: number
        format: decimal
        description: The total tax for the document.
  CommitTaxRequest:
    description: "Input for `CommitTax` indicating the document that should be committed. You may use just the `DocId` to locate and commit the document (5.8 adapter and earlier, or 14.2 and later), or you may use all three of `CompanyCode`, `DocType` and `DocCode`."
    required:
      - CompanyCode
      - DocType
      - DocCode
    properties:
      CompanyCode:
        type: string
        maxLength: 25
        description: The client application company reference code.
      DocCode:
        type: string
        maxLength: 50
        description: The internal reference code (invoice number) used by the client application.
      DocType:
        type: string
        description: The original document's type, such as `SalesInvoice` or `PurchaseInvoice`.
      DocId:
        type: string
        maxLength: 19
        description: Avatax-assigned unique document ID, can be used in place of `CompanyCode`, `DocType` and `DocCode`.
  AdjustTaxRequest:
    description: Input for adjusting documents. An `AdjustTaxRequest` consists of the body of a regular `GetTaxRequest` plus the addition of the `AdjustTaxRequest` object and calling method. The `GetTaxRequest` specified will replace the original document. All original values that aren’t being modified need to be populated in this object in addition to any values that are being modified.
    required:
      - AdjustmentReason
      - AdjustmentDescription
      - GetTaxRequest
    properties:
      AdjustmentReason:
        type: number
        format: integer
        description: "Sets a valid reason for the given `AdjustTax` call. `AdjustmentReason` is a high level classification of why an original document is being modified. Must be one of:
            0 - Not Adjusted
            1 - Sourcing Issue
            2 - Reconciled with General Ledger
            3 - Exemption Certificate Applied
            4 - Price or Quantity Adjusted
            5 - Item Returned
            6 - Item Exchanged
            7 - Bad Debt
            8 - Other (Explain) Must provide `AdjustmentDescription`"
        example: 8
      AdjustmentDescription:
        type: string
        maxLength: 255
        description: Should be used when `AdjustmentReason` is "other" for enhanced traceability. Leave empty for all `AdjustmentReason` selections except `8`.
        example: "Invoice Adjusted"
      GetTaxRequest:
        $ref: '#/definitions/GetTaxRequest'
  GetTaxHistoryRequest:
    description: Input for `GetTaxHistory` indicating the document for which history should be retrieved. The request must specify all of `CompanyCode`, `DocCode`, and `DocType` in order to uniquely identify the document.
    required:
      - CompanyCode
      - DocType
      - DocCode
      - DetailLevel
    properties:
      CompanyCode:
        type: string
        maxLength: 25
        description: The client application company reference code.
        example: APITrialCompany
      DocCode:
        type: string
        maxLength: 50
        description: The internal reference code (invoice number) used by the client application.
        example: INV001
      DocType:
        type: string
        description: The original document's type, such as SalesInvoice or PurchaseInvoice.
        example: SalesInvoice
      DetailLevel:
        type: string
        description: "Specifies the level of detail to return. Must be one of:
          Summary - summarizes document and jurisdiction detail with no line breakout
          Document - only document detail
          Line - document and line detail
          Tax - document, line and jurisdiction detail"
        example: Summary
  Ping:
    xml:
      namespace: "http://avatax.avalara.com/services"
    required:
      - Message
    properties:
      Message:
        type: string
        description: "A message recorded in server-side audit logs. Can be empty."
        maxLength: 255
  IsAuthorizedRequest:
    required:
      - Operations
    properties:
      Operations:
        type: string
        maxLength: 255
        description: "The list of operations that you would like to test."
  CancelTaxRequest:
    required:
      - CancelCode
      - CompanyCode
      - DocCode
      - DocType
    properties:
      CancelCode:
        type: string
        description: 'The reason for cancelling the tax record. One of: Unspecified, PostFailed, DocDeleted, DocVoided, AdjustmentCancelled'
      CompanyCode:
        maxLength: 25
        type: string
        description: Client application company reference code. Not required if the document is identified by `DocId`.
      DocCode:
        maxLength: 50
        type: string
        description: 'Client application identifier describing this tax transaction (i.e. invoice number, sales order number, etc.). Not required if the document is identified by `DocId`.'
      DocType:
        type: string
        description: 'Value describing what type of tax document is being cancelled. One of: SalesInvoice, ReturnInvoice, PurchaseInvoice. Not required if the document is identified by `DocId`.'
      DocId:
        type: string
        description: 'Avatax-assigned unique document ID, can be used in place of DocCode, DocType, and CompanyCode'
  GetTaxRequest:
    required:
      - CustomerCode
      - Addresses
      - Lines
    properties:
      BusinessIdentificationNo:
        maxLength: 25
        type: string
        example: '234234'
        description: 'The buyer’s VAT ID. Using this value will force VAT rules to be considered for the transaction. This may be set on the document or the line. Note that this should be a valid VAT number, and this field should not be used for any other purpose.'
      Commit:
        type: boolean
        example: 'false'
        description: 'Default is `false`. Setting this value to true will put the document in a committed status, preventing further document status changes, except voiding with `CancelTax`.'
      CompanyCode:
        maxLength: 25
        type: string
        example: APITrialCompany
        description: 'The case-sensitive code that identifies the company in the AvaTax account in which the document should be posted. This code is declared during the company setup in the AvaTax Admin Console. If no value is passed, the document will be assigned to the default company. If a value is passed that does not match any company on on the account, an error is returned.'
      CustomerCode:
        maxLength: 50
        type: string
        example: ABC4335
        description: The case-sensitive client application customer reference code. This is required since it is the key to the Exemption Certificate Management Service in the Admin Console.
      CurrencyCode:
        maxLength: 3
        type: string
        example: USD
        description: '3 character ISO 4217 compliant currency code. If unspecified, a default of `USD` will be used.'
      CustomerUsageType:
        maxLength: 25
        type: string
        example: G
        description: "The client application customer or usage type. More information about this value is available in the [Avalara Help Center](https://help.avalara.com/kb/001/What_are_the_Entity_Use_Codes_used_for_Avalara_AvaTax%3F). "
      DetailLevel:
        type: string
        example: Tax
        description: "Specifies the level of detail to return.
        Summary - summarizes document and jurisdiction detail with no line breakout 
        Document - only document detail 
        Line - document and line detail 
        Tax - document, line and jurisdiction detail"
      Discount:
        type: number
        format: float
        example: '50'
        description: 'The discount amount to apply to the document. This may be used along with the line attribute Discounted in order to distribute a set discount amount proportionally across the applicable document lines. This should be an amount, not a percent.'
      DocCode:
        maxLength: 50
        type: string
        description: 'While this is an optional field, serious consideration should be given to using it. If no value is sent, AvaTax assigns a GUID value to keep the document unique. This can make reconciliation a challenge.'
        example: INV001
      DocType:
        type: string
        example: SalesOrder
        description: 'The document type specifies the category of the document and affects how the document is treated after a tax calculation. If no DocType is specified in the request, SalesOrder will be used. 
         SalesOrder: This is a temporary document type and is not saved in tax history. GetTaxResult will return with a DocStatus of Temporary. 
         SalesInvoice: The document is a permanent invoice; document and tax calculation results are saved in the tax history. GetTaxResult will return with a DocStatus of Saved. 
         PurchaseOrder: This is a temporary document type and is not saved in tax history. GetTaxResult will return with a DocStatus of Temporary. 
         PurchaseInvoice : The document is a permanent invoice; document and tax calculation results are saved in the tax history. GetTaxResult will return with a DocStatus of Saved. 
         ReturnOrder: This is a temporary document type and is not saved in tax history. GetTaxResult will return with a DocStatus of Temporary. 
         ReturnInvoice: The document is a permanent sales return invoice; document and tax calculation results are saved in the tax history GetTaxResult will return with a DocStatus of Saved.'
      DocDate:
        type: string
        format: date
        example: '2014-01-01'
        description: 'The date on the invoice, purchase order, etc. Format YYYY-MM-DD. If omitted, this will default to the current date.'
      ExemptionNo:
        maxLength: 25
        type: string
        description: 'Any string value will cause the sale to be exempt. This should only be used if your finance team is manually verifying and tracking exemption certificates.'
        example: 'EX-0001'
      LocationCode:
        maxLength: 25
        type: string
        example: '01'
        description: 'Also referred to as a store location, outlet id, or outlet code. Location code is a value assigned by some state jurisdictions that identifies a particular store location. These states may require tax liabilities to be broken out separately for each store location'
      PosLaneCode:
        maxLength: 50
        type: string
        example: 09
        description: Permits a point of sale application to record the unique code / ID / number associated with the terminal processing a sale.
      PurchaseOrderNo:
        maxLength: 50
        type: string
        example: ''
        description: Your customer’s purchase order number.
      ReferenceCode:
        maxLength: 50
        type: string
        example: ''
        description: 'For returns, refers to the `DocCode` of the original invoice.'
      DestinationCode:
        type: string
        example: '01'
        description: Destination (ship-to) address code. `DestinationCode` references an address from the `Addresses` collection.
      OriginCode:
        type: string
        example: '02'
        description: Origination (ship-from) address code. `OriginCode` references an address from the `Addresses`
      ServiceMode:
        type: string
        description: "AvaTaxLocal function - provides the ability to control whether a tax is calculated locally or AvaTax web service. The default is `Automatic` which calculates locally unless a remote connection is necessary for “send sales” not configured at the local server level. One of: Automatic, Local, Remote"
        example: Automatic
      PaymentDate:
        type: string
        description: "Deprecated. Will be ignored if specified."
        example: '1900-01-01'
      ExchangeRate:
        type: number
        format: decimal
        description: "Indicates the currency exchange rate from the transaction currency (indicated by `CurrencyCode`) to the company’s base currency. Note: ExchangeRate need only be set if the transaction currency is different that of the company’s base currency. Default is `1.0`"
        default: 1.0
        example: 1.0
      ExchangeRateEffDate:
        type: string
        description: Indicates the effective date of the exchange rate and works in tandem with `ExchangeRate`. Default is the `DocDate` if null. Date is in the format YYYY-MM-DD.
        example: '1900-01-01'
      TaxOverride:
        $ref: '#/definitions/TaxOverride'
      Addresses:
        type: array
        xml:
          wrapped: true
        items:
          $ref: '#/definitions/BaseAddress'
        description: ''
      Lines:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Line'
        description: Document line array. There is a limit of 15000 lines per document.
  Line:
    description: Input property of the GetTaxRequest describing item lines.
    xml:
      name: Line
    required:
      - LineNo
      - DestinationCode
      - OriginCode
      - Qty
    properties:
      LineNo:
        maxLength: 50
        type: string
        example: '1'
        description: 'Line item identifier. Uniquely identifies the line item row.'
        xml: 
          name: 'No'
      DestinationCode:
        type: string
        example: '01'
        description: 'Destination (ship-to) address code. `DestinationCode` references an address from the `Addresses` collection.'
      OriginCode:
        type: string
        example: '02'
        description: 'Origination (ship-from) address code. `OriginCode` references an address from the `Addresses` collection.'
      ItemCode:
        maxLength: 50
        type: string
        example: N543
        description: 'Your item identifier, SKU, or UPC. Strongly recommended.'
      TaxCode:
        maxLength: 25
        type: string
        example: NT
        description: 'Product taxability code of the line item. Can be an AvaTax system tax code, or a custom-defined tax code.'
      CustomerUsageType:
        maxLength: 25
        type: string
        example: L
        description: 'The client application customer or usage type. `CustomerUsageType` determines the exempt status of the transaction based on the exemption tax rules for the jurisdictions involved. Can also be referred to as Entity/Use Code. More information about this value is available in the Avalara Help Center.'
      BusinessIdentificationNo:
        maxLength: 25
        type: string
        example: '234234'
        description: 'The buyer’s VAT id. Using this value will force VAT rules to be considered for the transaction. This may be set on the document or the line.'
      Description:
        maxLength: 255
        type: string
        example: Red Size 7 Widget
        description: 'Item description. Required for customers using our filing service.'
      Qty:
        type: number
        example: '1'
        description: 'Item quantity. The tax engine does NOT use this as a multiplier with price to get the `Amount`.'
      Amount:
        type: number
        example: '10'
        description: 'Total amount of item (extended amount, qty * unit price). If omitted, this value will default to 0'
      Discounted:
        type: boolean
        example: 'false'
        description: 'Should be set to true if the document level discount is applied to this line item. Defaults to false.'
      TaxIncluded:
        type: boolean
        example: 'false'
        description: 'Should be set to true if the tax is already included, and sale amount and tax should be back-calculated from the provided `Line.Amount`. Defaults to false.'
      Ref1:
        maxLength: 250
        type: string
        example: ref123
        description: Stored with a line. Does not affect tax calculation.
      Ref2:
        maxLength: 250
        type: string
        example: ref456
        description: Stored with a line. Does not affect tax calculation.
      TaxOverride:
          $ref: '#/definitions/TaxOverride'
  TaxOverride:
    description: 'Nested object describing any tax override applied to the document. `TaxOverride` only needs to be included when there is need to override our tax calculation, most commonly on product returns. For each document, this may be done at either the document or line level, but not both on the same document.'
    required:
      - Reason
      - TaxOverrideType
    properties:
      Reason:
        maxLength: 255
        type: string
        example: Return
        description: "This provides the reason for a tax override for audit purposes. Typical reasons include: 'Return', 'Layaway', 'Imported'."
      TaxOverrideType:
        type: string
        example: None
        description: "Must be one of the following: 
        None: Default 
        TaxAmount: The TaxAmount overrides the total tax for the document. This is used for imported documents, returns, and layaways where the tax has already been calculated either by AvaTax or another means. 
        Exemption: Exemption certificates are overridden making the document taxable. This may be used for situations where a normally exempt entity needs to be treated as not exempt. 
        TaxDate: The TaxDate overrides the DocDate as the effective date used for tax calculation. This may effect rates, rules and other factors."
      TaxDate:
        type: string
        example: '2015-01-01'
        description: 'Must be valid date, required if `TaxOverrideType` is `TaxDate`. The override tax date to use. This is used when the tax has been previously calculated as in the case of a layaway, return or other reason indicated by the `Reason` element. If the date is not overridden, then it should be set to the same as the `DocDate`.'
      TaxAmount:
        type: string
        example: '14.26'
        description: 'Must be numeric, required if `TaxOverrideType` is `TaxAmount`. The overriding amount of tax to apply. If at the document level, this is distributed across all taxable rows.'
  Address:
    description: Input property of `GetTaxRequest` representing addresses needed for tax calculations.
    xml:
      name: Address
    required:
      - Line1
      - City
      - Region
      - PostalCode
    properties:
      AddressCode:
        type: string
        example: '01'
        description: Reference code uniquely identifying this address instance.
      Line1:
        maxLength: 50
        type: string
        example: 45 Fremont Street
        description: 'Address line 1, required if Latitude and Longitude are not provided.'
      Line2:
        maxLength: 50
        type: string
        example: Suite 100
        description: Address line 2
      Line3:
        maxLength: 50
        type: string
        example: ATTN Accounts Payable
        description: Address line 3
      City:
        maxLength: 50
        type: string
        example: Chicago
        description: 'City name, required unless `PostalCode` is specified and/or latitude and longitude are provided.'
      Region:
        maxLength: 3
        type: string
        example: IL
        description: 'State, province, or region name. Required unless City is specified and/or latitude and longitude are provided.'
      Country:
        maxLength: 2
        type: string
        example: US
        description: "Country code. If not provided, will default to 'US'."
      PostalCode:
        maxLength: 11
        type: string
        example: '60602'
        description: 'Postal or ZIP code, Required unless city and region are specified, and/or latitude and longitude are provided.'
      Latitude:
        type: number
        format: double
        example: '47.627935'
        description: 'Geographic latitude. If latitude is defined, it is expected that the longitude field will also be provided. Failure to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      Longitude:
        type: number
        format: float
        example: '-122.51702'
        description: 'Geographic longitude. If longitude is defined, it is expected that the latitude field will also be provided. Fail to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      TaxRegionId:
        type: number
        format: integer
        description: 'AvaTax tax region identifier. If a non-zero value is entered into `TaxRegionId`, other fields will be ignored. Not recommended.'
        example: 1
  BaseAddress:
    description: Input property of `GetTaxRequest` representing addresses needed for tax calculations.
    xml:
      name: BaseAddress
    required:
      - AddressCode
      - Line1
      - City
      - Region
      - PostalCode
    properties:
      AddressCode:
        type: string
        example: '01'
        description: Reference code uniquely identifying this address instance.
      Line1:
        maxLength: 50
        type: string
        example: 45 Fremont Street
        description: 'Address line 1, required if latitude and longitude are not provided.'
      Line2:
        maxLength: 50
        type: string
        example: Suite 100
        description: Address line 2
      Line3:
        maxLength: 50
        type: string
        example: ATTN Accounts Payable
        description: Address line 3
      City:
        maxLength: 50
        type: string
        example: Chicago
        description: 'City name, required unless PostalCode is specified and/or latitude and longitude are provided.'
      Region:
        maxLength: 3
        type: string
        example: IL
        description: 'State, province, or region name. Required unless City is specified and/or latitude and longitude are provided.'
      Country:
        maxLength: 2
        type: string
        example: US
        description: "Country code. If not provided, will default to 'US'."
      PostalCode:
        maxLength: 11
        type: string
        example: '60602'
        description: 'Postal or ZIP code, Required unless city and region are specified, and/or latitude and longitude are provided.'
      Latitude:
        type: number
        format: double
        example: '47.627935'
        description: 'Geographic latitude. If latitude is defined, it is expected that the longitude field will also be provided. Failure to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      Longitude:
        type: number
        format: float
        example: '-122.51702'
        description: 'Geographic longitude. If longitude is defined, it is expected that the latitude field will also be provided. Fail to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      TaxRegionId:
        type: number
        format: integer
        description: 'AvaTax tax region identifier. If a non-zero value is entered into `TaxRegionId`, other fields will be ignored. Not recommended.'
        example: 1
  DocCode:
    maxLength: 50
    type: string
    example: INV001
    description: 'While this is an optional field, serious consideration should be given to using it. If no value is sent, AvaTax assigns a GUID value to keep the document unique, which can make reconciliation a challenge.'
  ResultCode:
    type: string
    example: Success
    description: 'Classifies severity of message. One of: Success, Warning, Error, Exception'
  Country:
    maxLength: 2
    type: string
    example: US
    pattern: '^[A-Z][A-Z]$'
    description: Two character ISO country code.
  UnauthorizedError:
    xml:
      name: Envelope
      prefix: s
      namespace: "http://schemas.xmlsoap.org/soap/envelope/"
    properties:
      Body:
        title: Body
        type: object
        xml:
          prefix: s
        properties:
          Fault:
            title: Fault
            type: object
            xml:
              prefix: s
            properties:
              faultcode:
                type: string
                example: 's:Client'
              faultstring:
                type: string
                example: 'The user or account could not be authenticated.'
  Message:
    xml:
      name: Message
    properties:
      Summary:
        maxLength: 255
        type: string
        example: Company not found.  Verify the CompanyCode.
        description: The message summary in short form.
      Details:
        maxLength: 255
        type: string
        example: APITrialCompany
        description: Description of the error or warning.
      RefersTo:
        maxLength: 255
        type: string
        example: CompanyCode
        description: The data used during the request that caused the message to be generated.
      Source:
        maxLength: 255
        type: string
        example: Avalara.AvaTax.Services.Tax
        description: The internal location that generated the message.
      Severity:
        type: string
        example: Error
        description: "Classifies the severity of the message. One of: Success, Warning, Error, Exception."
  TaxDetail:
    description: Tax details by jurisdiction
    xml:
      name: TaxDetail
    properties:
      Country:
        $ref: '#/definitions/Country'
      JurisName:
        type: string
        description: Name of a tax jurisdiction
        example: BAINBRIDGE ISLAND
        maxLength: 200
      JurisCode:
        type: string
        description: State assigned code identifying the jurisdiction. Note that this is not necessarily a unique identifier of the jurisdiction.
        example: 035
        maxLength: 200
      JurisType:
        type: string
        maxLength: 9
        enum:
          - State
          - County
          - City
          - Country
          - Special Tax Jurisdiction
      Rate:
        type: number
        format: decimal
        description: Effective tax rate for tax jurisdiction
        example: 0.022
      Region:
        type: string
        description: Region of tax jurisdiction
        example: WA
        maxLength: 3
      Tax:
        type: number
        format: decimal
        description: Tax amount
        example: 2.22
      TaxName:
        type: string
        description: Tax name
        example: WA CITY TAX
        maxLength: 75
  CancelTaxResponse:
    properties:
      CancelTaxResult:
        title: CancelTaxResult
        type: object
        properties:
          TransactionId:
            type: string
            description: The unique numeric identifier of the API operation assigned by the AvaTax service.
          DocId:
            type: string
            description: The unique numeric identifier (Document ID) assigned to the tax document in question by the AvaTax Service.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  GetTaxResponse:
    xml:
      name: GetTaxResponse
    properties:
      GetTaxResult:
        allOf:
          - $ref: '#/definitions/GetTaxResult'
          - properties:
              ResultCode:
                $ref: '#/definitions/ResultCode'
              Messages:
                type: array
                xml:
                  wrapped: true
                items:
                  $ref: '#/definitions/Message'
          - title: GetTaxResult
  GetTaxResult:
    title: GetTaxResult
    properties:
      DocCode:
        $ref: '#/definitions/DocCode'
      DocDate:
        type: string
        description: Date of invoice, sales order, purchase order, etc.
      TimeStamp:
        type: string
        format: date-time
        description: Server timestamp of request.
      TotalAmount:
        type: number
        description: Sum of all line `Amount` values.
      TotalDiscount:
        type: number
        description: Sum of all `TaxLine` discount amounts.
      TotalExemption:
        type: number
        description: Total exemption amount.
      TotalTaxable:
        type: number
        description: Total taxable amount.
      TotalTax:
        type: number
        description: Sum of all `TaxLine` tax amounts.
      TotalTaxCalculated:
        type: number
        description: Indicates the total tax calculated by AvaTax. This is usually the same as the `TotalTax`, except when a tax override amount is specified. This is for informational purposes. The `TotalTax` will still be used for reporting.
      TaxDate: 
        type: string
        format: date
        description: Date used to assess tax rates and jurisdictions.
      TaxLines:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/TaxLine'
      TaxSummary:
        xml:
          wrapped: true
        type: array
        items:
          $ref: '#/definitions/TaxDetail'
      TaxAddresses:
        xml:
          wrapped: true
        type: array
        items:
          $ref: '#/definitions/TaxAddress'
  TaxLine:
    description: Tax calculation details for each item line (returned for detail levels `Line` and `Tax`).
    xml:
      name: TaxLine
    properties:
      LineNo:
        maxLength: 50
        type: string
        description: Line item identifier
      TaxCode:
        type: string
        description: The tax code used in calculating tax
        maxLength: 25
      Taxability:
        type: boolean
        description: Flag indicating item was taxable
      Taxable:
        type: number
        description: The amount that is taxable
      Rate:
        type: number
        description: Effective tax rate
      Tax:
        type: number
        description: Tax amount
      Discount: 
        type: number
        description: Discount amount
      TaxCalculated:
        type: number
        description: Amount of tax calculated
      Exemption:
        type: number
        description: Exempt amount
      BoundaryLevel:
        type: string
        description: 'The boundary level used to calculate tax: determined by the provided addresses'
        maxLength: 7
      TaxDetails:
        type: array
        xml:
          wrapped: true
        items:
          $ref: '#/definitions/TaxDetail'
  TaxAddress:
    description: Represents canonical addresses used in tax calculation.
    xml:
      name: TaxAddress
    properties:
      Address:
        type: string
        description: Canonical street address
        maxLength: 50
      AddressCode:
        type: string
        description: Reference code uniquely identifying this address instance. `AddressCode` will always correspond to an address code supplied to in the address collection provided in the request.
      City:
        type: string
        description: City name
        maxLength: 50
      Region:
        type: string
        description: State or region name
        maxLength: 3
      Country:
        type: string
        description: 'Country code, as ISO 3166-1 (Alpha-2) country code (e.g. "US")'
        maxLength: 2
      PostalCode:
        type: string
        description: Postal code
        maxLength: 11
      Latitude:
        type: number
        description: 'Geographic latitude.'
      Longitude:
        type: number
        description: 'Geographic longitude.'
      TaxRegionId:
        type: number
        description: AvaTax tax region identifier
      JurisCode:
        type: string
        description: Tax jurisdiction code
  ValidateResponse:
    description: Output for address/validate showing the validated address match or address validation errors.
    xml:
      namespace: 'http://avatax.avalara.com/services'
    properties:
      ValidateResult:
        title: ValidateResult
        type: object
        properties:
          ValidAddresses:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/ValidAddress'
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Taxable:
            type: boolean
            description: Indicates if the address should have tax applied to it. Only present if `Taxability` was set to true in the request.
          TransactionId:
            type: string
            description: The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting.
          Messages:
            description: 'Present in the response only if ResultCode is not `Success`'
            type: array
            xml: 
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  ValidAddress:
    xml:
      name: ValidAddress
    properties:
      AddressCode:
        type: string
        example: 01
        description: A unique identifier of the address in the request. Will be blank unless an `AddressCode` was passed in the request.
      Line1:
        type: string
        example: 45 Fremont Street
        description: Address line 1
        maxLength: 50
      Line2:
        type: string
        example: Suite 100
        description: Address line 2
        maxLength: 50
      Line3:
        type: string
        example: ATTN Accounts Payable
        description: Address line 3
        maxLength: 50
      City:
        type: string
        example: Chicago
        description: City name
        maxLength: 50
      Region:
        type: string
        example: IL
        description: 'State, province, or region name.'
        maxLength: 3
      Country:
        type: string
        example: US
        description: Country code.
        maxLength: 2
      PostalCode:
        type: string
        example: '60602'
        description: Postal or ZIP code
        maxLength: 11
      AddressType:
        type: string
        description: 'Address type code. One of:
        * F - Firm or company address
        * G - General Delivery address
        * H - High-rise or business complex
        * P - PO Box address
        * R - Rural route address
        * S - Street or residential address' 
        maxLength: 1
      FipsCode:
        type: string
        description: 'FIPSCode is a unique 10-digit code representing each geographic combination of state, county, and city. The code is made up of the Federal Information Processing Code (FIPS) that uniquely identifies each state, county, and city in the U.S. Returned for US addresses only. Digits represent jurisdiction codes:
         * 1-2 State code
         * 3-5 County code
         * 6-10 City code'
        maxLength: 10
      CarrierRoute:
        type: string
        description: 'CarrierRoute is a four-character string representing a US postal carrier route. The first character of this property, the term, is always alphabetic, and the last three numeric. For example, “R001” or “C027” would be typical carrier routes. The alphabetic letter indicates the type of delivery associated with this address. Returned for US addresses only.
        * B - PO Box
        * C - City delivery
        * G - General delivery
        * H - Highway contract
        * R - Rural route'
        maxLength: 4
      PostNet:
        type: string
        description: 'POSTNet is a 12-digit barcode containing the ZIP Code, ZIP+4 Code, and the delivery point code, used by the USPS to direct mail. Returned for US addresses only digits represent delivery information:
          * 1-5 ZIP code
          * 6-9 Plus4 code
          * 10-11 Delivery point
          * 12 Check digit'
        maxLength: 12
  PostTaxResponse:
    description: Result data returned from PostTax.
    properties:
      PostTaxResult:
        type: object
        title: PostTaxResult
        properties:
          DocId:
            type: string
            maxLength: 19
            description: The unique document ID assigned by AvaTax to the document modified. This value need only be retained for troubleshooting.
          TransactionId:
            type: string
            maxLength: 19
            description: The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  CommitTaxResponse:
    description: Output for `CommitTax` indicating the success of the operation, or any errors encountered.
    properties:
      CommitTaxResult:
        type: object
        title: CommitTaxResult
        properties:
          DocId:
            type: string
            maxLength: 19
            description: The unique document ID assigned by AvaTax to the document modified. This value need only be retained for troubleshooting.
          TransactionId:
            type: string
            maxLength: 19
            description: The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  AdjustTaxResponse:
    description: Result data returned from `AdjustTax`. Within this result you will find the same elements as a `GetTaxResult`. It is likely you will want to consider retrieving the document Version in addition to other tax related information. This is an element of all `GetTaxResult` or `AdjustTaxResult` objects.
    properties:
      AdjustTaxResult:
        allOf:
          - $ref: '#/definitions/GetTaxResult'
          - properties:
              ResultCode:
                $ref: '#/definitions/ResultCode'
              Messages:
                type: array
                xml:
                  wrapped: true
                items:
                  $ref: '#/definitions/Message'
          - title: GetTaxResult
  GetTaxHistoryResponse:
    description: Result data returned from `GetTaxHistory`. You can retrieve any part of the `GetTaxRequest` or `GetTaxResult`.
    properties:
      GetTaxHistoryResult:
        type: object
        title: GetTaxHistoryResult
        properties:
          GetTaxRequest:
            $ref: '#/definitions/GetTaxRequest'
          GetTaxResult:
            $ref: '#/definitions/GetTaxResult'
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  PingResponse:
    description: Result data returned from `Ping`.
    properties:
      PingResult:
        type: object
        title: PingResult
        xml: 
          namespace: "http://avatax.avalara.com/services"
        properties: 
          Version:
            description: The service version of the AvaTax service.
            maxLength: 15
          TransactionId:
            type: string
            maxLength: 19
            description: The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml: 
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  IsAuthorizedResponse:
    description: Result data returned from `IsAuthorized`.
    properties:
      IsAuthorizedResult:
        title: IsAuthorizedResult
        type: object
        xml:
          namespace: "http://avatax.avalara.com/services"
        properties:
          Expires:
            description: The date and time at which your AvaTax account will expire. DateTime in the format YYYY-MM-DD
            type: string
            maxLength: 10
          Operations:
            type: string
            description: "The operations that the current user is authorized to use. Determined from the list provided in the `IsAuthorized` call. Possible operations are: Ping, IsAuthorized, GetTax, PostTax, CommitTax, CancelTax, AdjustTax, GetTaxHistory, Validate."
            maxLength: 255
          TransactionId:
            type: string
            maxLength: 19
            description: The unique transaction ID assigned by AvaTax to this request/response set. This value need only be retained for troubleshooting.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  Header:
    description: 'The SOAP API uses standard WSS (Web Service Security) token to authenticate the account or user, and additional `Profile` information to describe the agent calling the service.'
    required:
      - Security
      - Profile
    properties:
      Security:
        $ref: '#/definitions/Security'
      Profile:
        $ref: '#/definitions/Profile'
    xml:
      prefix: 'SOAP-ENV'
  Security:
    required:
      - UsernameToken
    properties:
      UsernameToken:
        $ref: '#/definitions/UsernameToken'
      'SOAP-ENV:actor':
        type: string
        example: "http://schemas.xmlsoap.org/soap/actor/next"
        description: 'The WS-Security standard requires the `wsse:Security` element contains a `SOAP-ENV:actor` attribute.'
        xml:
          attribute: true
    xml:
      prefix: 'wsse'
      namespace: 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
  UsernameToken:
    description: Either an Account/LicenseKey or a Username/Password is required to authenticate the request. AccountNumber/LicenseKey is preferred.
    xml:
      prefix: 'wsse'
    required:
      - Account
      - LicenseKey
    properties:
      Account:
        type: string
        maxLength: 10
        description: The unique account number provided by Avalara for verification against the service. If you are on a free trial and don’t have a license key, use Username.
        example: 1234567890
        xml:
          prefix: 'wsse'
      LicenseKey:
        type: string
        maxLength: 16
        description: The unique alpha-numeric key provided by Avalara for verification against the service. If you are on a free trial and don’t have a license key, use Password.
        example: A1B2C3D4E5F6G7H8
        xml:
          prefix: 'wsse'
      Username:
        type: string
        maxLength: 50
        description: Your AvaTax Admin Console username. Usually an email address.
        xml:
          prefix: 'wsse'
      Password: 
        type: string
        maxLength: 50
        description: Your AvaTax Admin Console password.
        xml:
          prefix: 'wsse'
  Profile: 
    required:
      - Client
      - Adapter
      - Name
      - Machine
    xml:
      namespace: 'http://avatax.avalara.com/services'
    properties:
      Client: 
        type: string
        maxLength: 50
        description: 'Client application name and version. This should unique identify the software client that is calling the AvaTax service, and should be consistent across all deployments of that client version. e.g. “Drupal Commerce 5.7”'
      Adapter: 
        type: string
        maxLength: 50
        description: Name and version of the adapter. This is set automatically by the .NET, PHP, and Java adapters.
      Machine:
        type: string
        maxLength:  50
        description: The NetBIOS name of the local computer. This is set automatically by the .NET, PHP, and Java adapters.
      Name:
        type: string
        maxLength: 50
        description: Reference to a named profile.
