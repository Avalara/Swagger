swagger: '2.0'
info:
  description: "The AvaTax REST API exposes the most commonly used available for interacting with the AvaTax service, allowing calculation of tax, modification of documents, and validation of addresses. If you're unsure of which API to use, a full comparison of the differences between the functionality provided by our REST and SOAP interfaces is documented [here](http://developer.avalara.com/avatax/soap-or-rest/).
  
  The [SOAP API reference](http://developer.avalara.com/avatax/api-reference/tax/soap) is also available."
  version: '1.0'
  title: AvaTax REST API
  termsOfService: 'http://www.avalara.com/terms/'
  contact:
    name: 'For support, visit the Avalara Community'
    url: 'https://community.avalara.com/avalara/category_sets/developers'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: development.avalara.net
basePath: /1.0
schemes:
  - https
consumes:
  - text/json
  - text/xml
produces:
  - text/json
  - text/xml
security:
  - basic_auth: []
x-auth-formula: "`Basic ${btoa(`<username>:<password>`)}`"
x-sample-auth-header: 'Basic aHR0cHdhdGNoOmY='
x-api-proxy: https://swn36zl7ba.execute-api.us-west-2.amazonaws.com/prod		
x-ApiType: REST
paths:
  '/tax/get':
    post:
      summary: Calculate Tax and Record a Document
      description: 'Calculates taxes on a document such as a sales order, sales invoice, purchase order, purchase invoice, or credit memo. To use an XML request/response, use the URL `/1.0/tax/get.xml`'
      operationId: getTax
      parameters:
        - in: body
          name: GetTaxRequest
          required: true
          schema:
            $ref: '#/definitions/GetTaxRequest'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/GetTaxResult'
        '400':
          description: 'Unauthorized: Service raises a 400 when the credentials provided in the `Authorization` header are invalid.'
          schema: 
            $ref: '#/definitions/GetTaxError'
        '401':
          description: 'Unauthorized: Service raises a 401 when the `Authorization` header is missing or malformed.'
          schema: 
            $ref: '#/definitions/GetTaxError'
        '500':
          description: 'An Error Occurred: Service raises a 500 for any errors raised during the processing of a request.  For 500 errors, clients will need to inspect the error message returned in the response.'
          schema:
            $ref: '#/definitions/GetTaxError'
  '/tax/cancel':
    post:
      operationId: cancelTax
      summary: Void a Document
      description: 'Voids or deletes and existing transaction record from the AvaTax system. To use the XML for this operation specify the request `Content-Type: text/xml`. No modification needs to be made to the URL.'
      parameters:
        - in: body
          name: CancelTaxRequest
          schema:
            $ref: '#/definitions/CancelTaxRequest'
          required: true
      responses:
        '200':
          description: Successful operation *or* unsuccessful operation. In the case of an unsuccessful operation, a `ResultCode` of `Error` and an array of `Messages` is returned in the `CancelTaxResult` object.
          schema: 
            $ref: '#/definitions/CancelTaxResponse'
        '400':
          description: 'Unauthorized: Service raises a 400 when the credentials provided in the `Authorization` header are invalid.'
          schema:
            $ref: '#/definitions/CancelTaxUnauthorizedError'
        '401':
          description: 'Unauthorized: Service raises a 401 when the `Authorization` header is missing or malformed.'
          schema:
            $ref: '#/definitions/CancelTaxUnauthorizedError'
  '/tax/{latitude},{longitude}/get':
    get:
      summary: Estimate Tax
      description: 'Retrieves tax rate details for the supplied geographic coordinates and sale amount. Since the REST API does not provide an explicit ping function, this method can also be used to test connectivity to the service. If you would like an XML response, use the URL `/1.0/tax/{latitude},{longitude}/get.xml` and specify the request header `Content-Type: text/xml`.'
      operationId: estimateTax
      parameters:
        - in: path
          name: latitude
          required: true
          type: string
          format: int32
          description: The latitude of the geographic coordinates to get tax for based on the sale amount
          x-example: 47.6205
        - in: path
          name: longitude
          required: true
          type: string
          format: int32
          description: The longitude of the geographic coordinates to get tax for based on the sale amount
          x-example: -122.3493
        - in: query
          name: saleamount
          required: true
          type: string
          format: int32
          description: 'The amount of sale requiring tax calculation, in decimal format'
          x-example: 1249.99
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/EstimateTaxResult'
        '400':
          description: 'Unauthorized: Service raises a 400 when the credentials provided in the `Authorization` header are invalid.'
          schema:
            $ref: '#/definitions/EstimateTaxError'
        '401':
          description: 'Unauthorized: Service raises a 401 when the Authorization header is missing or malformed.'
          schema:
            $ref: '#/definitions/EstimateTaxError'
        '500':
          description: 'An Error Occurred: Service raises a 500 for any errors raised during the processing of a request.  For 500 errors, clients will need to inspect the error message returned in the response.'
          schema:
            $ref: '#/definitions/EstimateTaxError'
  '/address/validate':
    get:
      summary: Validate an Address
      description: 'Normalizes a single US or Canadian address, providing a non-ambiguous USPS address match. To recieve an XML response, use the URL `/1.0/address/validate.xml` and set the request header `Content-Type: text/xml`'
      operationId: validateAddress
      parameters: 
        - name: Line1
          required: true
          type: string
          description: Address line 1
          in: query
          maxLength: 50
          x-example: 400 Broad St
        - name: Line2
          required: false
          type: string
          description: Address line 2
          in: query
          maxLength: 50
        - name: Line3
          required: false
          type: string
          description: Address line 3
          in: query
          maxLength: 50
        - name: City
          required: false
          type: string
          description: "City name: optional unless `PostalCode` is not specified."
          in: query
          maxLength: 50
          x-example: Seattle
        - name: Region
          required: false
          type: string
          in: query
          maxLength: 3
          x-example: WA
        - name: Country
          in: query
          required: true
          type: string
          maxLength: 2
        - name: PostalCode
          in: query
          required: false
          type: string
          maxLength: 11
          x-example: 98109
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ValidateResult'
        '400':
          description: 'Unauthorized: Service raises a 400 when the credentials provided in the `Authorization` header are invalid.'
          schema: 
            $ref: '#/definitions/ValidateResultError'
        '401':
          description: 'Unauthorized: Service raises a 401 when the `Authorization` header is missing or malformed.'
          schema: 
            $ref: '#/definitions/ValidateResultError'
        '500':
          description: 'An Error Occurred: Service raises a 500 for any errors raised during the processing of a request.  For 500 errors, clients will need to inspect the error message returned in the response.'
          schema:
            $ref: '#/definitions/ValidateResultError'
securityDefinitions:
  basic_auth:
    type: basic
    description: "You will not be able to make web service calls until you have received an active account number and license key via email, or a username and password from the [sandbox registration](http://developer.avalara.com/getting-started). Authentication is in the format `Basic [account number]:[license key]` encoded to Base64, as per basic access authentication. For example: `Authorization: Basic a2VlcG1vdmluZzpub3RoaW5nMnNlZWhlcmU=`"
definitions:
  CancelTaxRequest:
    required:
      - CancelCode
      - CompanyCode
      - DocCode
      - DocType
    x-excludedProperties:
      - DocId
    properties:
      CancelCode:
        type: string
        description: 'The reason for cancelling the tax record. One of: Unspecified, PostFailed, DocDeleted, DocVoided, AdjustmentCancelled'
        example: DocDeleted
      CompanyCode:
        maxLength: 25
        type: string
        description: Client application company reference code. Not required if the document is identified by DocId.
        example: APITrialCompany
      DocCode:
        maxLength: 50
        type: string
        description: 'Client application identifier describing this tax transaction (i.e. invoice number, sales order number, etc.). Not required if the document is identified by DocId.'
        example: SalesInvoice
      DocType:
        type: string
        description: 'Value describing what type of tax document is being cancelled. One of: SalesInvoice, ReturnInvoice, PurchaseInvoice. Not required if the document is identified by DocId.'
        example: SalesInvoice
      DocId:
        type: string
        description: 'Avatax-assigned unique Document Id, can be used in place of DocCode, DocType, and CompanyCode.'
  GetTaxRequest:
    required:
      - CustomerCode
      - Addresses
      - Lines
    x-excludedProperties:
      - BusinessIdentificationNo
      - CurrencyCode
      - CustomerUsageType
      - ExemptionNo
      - DetailLevel
      - Discount
      - LocationCode
      - PosLaneCode
      - PurchaseOrderNo
      - ReferenceCode
      - TaxOverride
    properties:
      BusinessIdentificationNo:
        maxLength: 25
        type: string
        example: '234234'
        description: 'The buyer’s VAT ID. Using this value will force VAT rules to be considered for the transaction. This may be set on the document or the line. Note that this should be a valid VAT number, and this field should not be used for any other purpose.'
      Commit:
        type: boolean
        example: 'false'
        description: 'Default is false. Setting this value to true will put the document in a Committed status, preventing further document status changes, except voiding with CancelTax.'
      Client:
        maxLength: 50
        type: string
        example: AvaTaxSample
        description: An identifier of software client generating the API call.
      CompanyCode:
        maxLength: 25
        type: string
        example: APITrialCompany
        description: 'The case-sensitive code that identifies the company in the AvaTax account in which the document should be posted. This code is declared during the company setup in the AvaTax Admin Console. If no value is passed, the document will be assigned to the default company. If a value is passed that does not match any company on on the account, an error is returned.'
      CustomerCode:
        maxLength: 50
        type: string
        example: ABC4335
        description: The case-sensitive client application customer reference code. This is required since it is the key to the Exemption Certificate Management Service in the Admin Console.
      CurrencyCode:
        maxLength: 3
        type: string
        example: USD
        description: '3 character ISO 4217 compliant currency code. If unspecified, a default of USD will be used.'
      CustomerUsageType:
        maxLength: 25
        type: string
        example: G
        description: "The client application customer or usage type. More information about this value is available in the [Avalara Help Center](https://help.avalara.com/kb/001/What_are_the_Entity_Use_Codes_used_for_Avalara_AvaTax%3F)."
      DetailLevel:
        type: string
        example: Tax
        description: "Specifies the level of detail to return.
         Summary - summarizes document and jurisdiction detail with no line breakout 
         Document - only document detail 
         Line - document and line detail
         Tax - document, line and jurisdiction detail"
      Discount:
        type: number
        format: float
        example: '50'
        description: 'The discount amount to apply to the document. This may be used along with the line attribute `Discounted` in order to distribute a set discount amount proportionally across the applicable document lines. This should be an amount, not a percent.'
      DocCode:
        maxLength: 50
        type: string
        description: 'While this is an optional field, serious consideration should be given to using it. If no value is sent, AvaTax assigns a GUID value to keep the document unique. This can make reconciliation a challenge.'
        example: INV001
      DocType:
        type: string
        example: SalesOrder
        description: 'The document type specifies the category of the document and affects how the document is treated after a tax calculation. If no DocType is specified in the request, SalesOrder will be used. 
        SalesOrder: This is a temporary document type and is not saved in tax history. GetTaxResult will return with a DocStatus of Temporary. 
        SalesInvoice: The document is a permanent invoice; document and tax calculation results are saved in the tax history. GetTaxResult will return with a DocStatus of Saved. 
        PurchaseOrder: This is a temporary document type and is not saved in tax history. GetTaxResult will return with a DocStatus of Temporary. 
        PurchaseInvoice : The document is a permanent invoice; document and tax calculation results are saved in the tax history. GetTaxResult will return with a DocStatus of Saved. 
        ReturnOrder: This is a temporary document type and is not saved in tax history. GetTaxResult will return with a DocStatus of Temporary. 
        ReturnInvoice: The document is a permanent sales return invoice; document and tax calculation results are saved in the tax history GetTaxResult will return with a DocStatus of Saved.'
      DocDate:
        type: string
        format: date
        example: '2014-01-01'
        description: 'The date on the invoice, purchase order, etc. Format YYYY-MM-DD. If omitted, this will default to the current date.'
      ExemptionNo:
        maxLength: 25
        type: string
        description: 'Any string value will cause the sale to be exempt. This should only be used if your finance team is manually verifying and tracking exemption certificates.'
        example: 'EX-0001'
      LocationCode:
        maxLength: 25
        type: string
        example: '01'
        description: 'Also referred to as a Store Location, Outlet Id, or Outlet code. Location code is a value assigned by some state jurisdictions that identifies a particular store location. These states may require tax liabilities to be broken out separately for each store location.'
      PosLaneCode:
        maxLength: 50
        type: string
        example: 09
        description: Permits a point of sale application to record the unique code / ID / number associated with the terminal processing a sale.
      PurchaseOrderNo:
        maxLength: 50
        type: string
        example: ''
        description: Your customer’s purchase order number.
      ReferenceCode:
        maxLength: 50
        type: string
        example: ''
        description: 'Additional information used for reporting. For returns, this can refer to the DocCode of the original invoice.'
      TaxOverride:
        $ref: '#/definitions/TaxOverride'
      Addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
        description: ''
        xml:
          wrapped: true
      Lines:
        type: array
        items:
          $ref: '#/definitions/Line'
        description: Document line array. There is a limit of 15000 lines per document.
        xml:
          wrapped: true
  Line:
    description: Input property of the GetTaxRequest describing item lines.
    xml:
      name: Line
    required:
      - LineNo
      - DestinationCode
      - OriginCode
    x-excludedProperties:
      - CustomerUsageType
      - BusinessIdentificationNo
      - Discounted
      - TaxIncluded
      - Ref1
      - Ref2
      - TaxOverride
    properties:
      LineNo:
        maxLength: 50
        type: string
        example: '1'
        description: Line item identifier. LineId uniquely identifies the line item row.
      DestinationCode:
        type: string
        example: '01'
        description: Destination (ship-to) address code. `DestinationCode` references an address from the `Addresses` collection.
      OriginCode:
        type: string
        example: '02'
        description: Origination (ship-from) address code. `OriginCode` references an address from the `Addresses` collection.
      ItemCode:
        maxLength: 50
        type: string
        example: N543
        description: 'Your item identifier, SKU, or UPC. Strongly recommended.'
      TaxCode:
        maxLength: 25
        type: string
        example: NT
        description: 'Product taxability code of the line item. Can be an AvaTax system tax code, or a custom-defined tax code.'
      CustomerUsageType:
        maxLength: 25
        type: string
        example: L
        description: The client application customer or usage type. `CustomerUsageType` determines the exempt status of the transaction based on the exemption tax rules for the jurisdictions involved. Can also be referred to as Entity/Use Code. More information about this value is available in the Avalara Help Center.
      BusinessIdentificationNo:
        maxLength: 25
        type: string
        example: '234234'
        description: The buyer’s VAT id. Using this value will force VAT rules to be considered for the transaction. This may be set on the document or the line.
      Description:
        maxLength: 255
        type: string
        example: Red Size 7 Widget
        description: Item description. Required for customers using our filing service.
      Qty:
        type: number
        example: '1'
        description: Item quantity. The tax engine does NOT use this as a multiplier with price to get the `Amount`.
      Amount:
        type: number
        example: '10'
        description: 'Total amount of item (extended amount, qty * unit price). If omitted, this value will default to `0`'
      Discounted:
        type: boolean
        example: 'false'
        description: Should be set to true if the document level discount is applied to this line item. Defaults to `false`.
      TaxIncluded:
        type: boolean
        example: 'false'
        description: 'Should be set to `true` if the tax is already included, and sale amount and tax should be back-calculated from the provided `Line.Amount`. Defaults to `false`.'
      Ref1:
        maxLength: 250
        type: string
        example: ref123
        description: Value stored on a line item. Does not affect tax calclulation.
      Ref2:
        maxLength: 250
        type: string
        example: ref456
        description: Value stored on a line item. Does not affect tax calclulation.
      TaxOverride:
          $ref: '#/definitions/TaxOverride'
  TaxOverride:
    description: 'Nested object describing any tax override applied to the document. `TaxOverride` only needs to be included when there is need to override our tax calculation, most commonly when reflecting product returns. For each document, this may be done at either the document or line level, but not both on the same document.'
    required:
      - Reason
      - TaxOverrideType
    properties:
      Reason:
        maxLength: 255
        type: string
        example: Return
        description: "This provides the reason for a tax override for audit purposes. Typical reasons include: 'Return', 'Layaway', 'Imported'."
      TaxOverrideType:
        type: string
        example: TaxDate
        description: "Must be one of the following: 
        None: Default 
        TaxAmount: The TaxAmount overrides the total tax for the document. This is used for imported documents, returns, and layaways where the tax has already been calculated either by AvaTax or another means.
        Exemption: Exemption certificates are overridden making the document taxable. This may be used for situations where a normally exempt entity needs to be treated as not exempt. 
        TaxDate: The TaxDate overrides the DocDate as the effective date used for tax calculation. This may effect rates, rules and other factors."
      TaxDate:
        type: string
        example: '2015-01-01'
        description: 'Must be valid date, required if `TaxOverrideType` is `TaxDate`, the override tax date to use. This is used when the tax has been previously calculated as in the case of a layaway, return or other reason indicated by the `Reason` element. If the date is not overridden, then it should be set to the same as the `DocDate`.'
      TaxAmount:
        type: string
        example: '14.26'
        description: 'Must be numeric, required if `TaxOverrideType` is `TaxAmount`. The overriding amount of tax to apply. If at the document level, this is distributed across all taxable rows.'
  Address:
    description: Input property of `GetTaxRequest` representing addresses needed for tax calculations.
    xml:
      name: Address
    required:
      - AddressCode
      - Line1
      - City
      - Region
      - PostalCode
    x-excludedProperties:
      - TaxRegionId
      - Latitude
      - Longitude
    properties:
      AddressCode:
        type: string
        example: '01'
        description: Reference code uniquely identifying this address instance.
      Line1:
        maxLength: 50
        type: string
        example: 45 Fremont Street
        description: 'Address line 1, recommended if latitude and longitude are not provided.'
      Line2:
        maxLength: 50
        type: string
        example: Suite 100
        description: Address line 2
      Line3:
        maxLength: 50
        type: string
        example: ATTN Accounts Payable
        description: Address line 3
      City:
        maxLength: 50
        type: string
        example: Chicago
        description: 'City name, required unless `PostalCode` is specified and/or latitude and longitude are provided.'
      Region:
        maxLength: 3
        type: string
        example: IL
        description: 'State, province, or region name. Required unless Ccity is specified and/or latitude and longitude are provided.'
      Country:
        maxLength: 2
        type: string
        example: US
        description: "Two-character ISO country code. If not provided, will default to 'US'."
      PostalCode:
        maxLength: 11
        type: string
        example: '60602'
        description: 'Postal or ZIP code, Required unless city and region are specified, and/or latitude and longitude are provided.'
      Latitude:
        type: number
        format: double
        example: '47.627935'
        description: 'Geographic latitude. If `Latitude` is defined, it is expected that the longitude field will also be provided. Failure to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      Longitude:
        type: number
        format: float
        example: '-122.51702'
        description: 'Geographic longitude. If `Longitude` is defined, it is expected that the latitude field will also be provided. Fail to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      TaxRegionId:
        type: number
        format: integer
        description: 'AvaTax tax region identifier. If a non-zero value is entered into `TaxRegionId`, other fields will be ignored. Not recommended.'
  DocCode:
    maxLength: 50
    type: string
    example: INV001
    description: 'While this is an optional field, serious consideration should be given to using it. If no value is sent, AvaTax assigns a GUID value to keep the document unique, which can make reconciliation a challenge.'
  ResultCode:
    type: string
    example: Success
    description: 'Classifies severity of message. One of: Success, Warning, Error, Exception'
  ErrorResultCode:
    type: string
    example: Error
    description: 'Classifies severity of message. One of: Success, Warning, Error, Exception'
    xml:
      name: ResultCode
  Country:
    maxLength: 2
    type: string
    example: US
    description: Two character ISO country code.
  CancelTaxUnauthorizedError:
    xml:
      name: CancelTaxResponse
    properties:
      ResultCode:
        $ref: '#/definitions/ResultCode'
      Messages:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Message'
    example: {
                "ResultCode": "Error",
                "Messages": [
                  {
                  "Summary": "Company not found.  Verify the CompanyCode.",
                  "Details": "abcd",
                  "RefersTo": "CompanyCode",
                  "Severity": "Error",
                  "Source": "Avalara.AvaTax.Services.Tax"
                  }
                ]
            }
  GetTaxError:
    xml:
      name: GetTaxResult
    properties:
      ResultCode:
        $ref: '#/definitions/ErrorResultCode'
      Messages:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Message'
  Message:
    properties:
      Summary:
        maxLength: 255
        type: string
        example: Company not found.  Verify the CompanyCode.
        description: The message summary in short form.
      Details:
        maxLength: 255
        type: string
        example: APITrialCompany
        description: Description of the error or warning.
      RefersTo:
        maxLength: 255
        type: string
        example: CompanyCode
        description: The data used during the request that caused the message to be generated.
      Source:
        maxLength: 255
        type: string
        example: Avalara.AvaTax.Services.Tax
        description: The internal location that generated the message.
      Severity:
        type: string
        example: Error
        description: "Classifies the severity of the message. One of: Success, Warning, Error, Exception."
    xml:
      name: Message
  EstimateTaxResult:
    properties:
      Rate:
        type: number
        format: decimal
        description: Total effective tax rate.
      Tax:
        type: number
        format: decimal
        description: Total calculated tax amount.
      TaxDetails:
        type: array
        items:
          $ref: '#/definitions/TaxDetail'
        xml:
          wrapped: true
      ResultCode:
        $ref: '#/definitions/ResultCode'
    xml:
      name: GeoTaxResult
  EstimateTaxError:
    xml:
      name: GeoTaxResult
    properties:
      ResultCode:
        $ref: '#/definitions/ErrorResultCode'
      Messages:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Message'
  TaxDetail:
    description: Tax details by jurisdiction.
    xml:
      name: TaxDetail
    properties:
      Country:
        $ref: '#/definitions/Country'
      JurisName:
        type: string
        description: Name of a tax jurisdiction.
        example: BAINBRIDGE ISLAND
        maxLength: 200
      JurisCode:
        type: string
        description: State assigned code identifying the jurisdiction. Note that this is not necessarily a unique identifier of the jurisdiction.
        example: 035
        maxLength: 200
      JurisType:
        type: string
        maxLength: 9
        enum:
          - State
          - County
          - City
          - Country
          - Special Tax Jurisdiction
      Rate:
        type: number
        format: decimal
        description: Effective tax rate for tax jurisdiction.
        example: 0.022
      Region:
        type: string
        description: Region of tax jurisdiction.
        example: WA
        maxLength: 3
      Tax:
        type: number
        format: decimal
        description: Tax amount
        example: 2.22
      TaxName:
        type: string
        description: Tax name
        example: WA CITY TAX
        maxLength: 75
  CancelTaxResponse:
    xml:
      name: CancelTaxResponse
    properties:
      CancelTaxResult:
        title: CancelTaxResult
        type: object
        xml:
          name: CancelTaxResult
        properties:
          TransactionId:
            type: string
            description: The unique numeric identifier of the API operation assigned by the AvaTax service.
          DocId:
            type: string
            description: The unique numeric identifier (Document ID) assigned to the tax document in question by the AvaTax Service.
          ResultCode:
            $ref: '#/definitions/ResultCode'
          Messages:
            type: array
            xml: 
              wrapped: true
            items:
              $ref: '#/definitions/Message'
  GetTaxResult:
    xml:
      name: GetTaxResult
    properties:
      DocCode:
        $ref: '#/definitions/DocCode'
      DocDate:
        type: string
        description: Date of invoice, sales order, purchase order, etc.
      TimeStamp:
        type: string
        format: date-time
        description: Server timestamp of request.
      TotalAmount:
        type: number
        description: Sum of all line `Amount` values.
      TotalDiscount:
        type: number
        description: Sum of all `TaxLine` discount amounts.
      TotalExemption:
        type: number
        description: Total exemption amount.
      TotalTaxable:
        type: number
        description: Total taxable amount.
      TotalTax:
        type: number
        description: Sum of all `TaxLine` tax amounts.
      TotalTaxCalculated:
        type: number
        description: Indicates the total tax calculated by AvaTax. This is usually the same as the `TotalTax`, except when a tax override amount is specified. This is for informational purposes. The `TotalTax` will still be used for reporting.
      TaxDate: 
        type: string
        format: date
        description: Date used to assess tax rates and jurisdictions.
      TaxLines:
        type: array
        items:
          $ref: '#/definitions/TaxLine'
        xml:
          wrapped: true
      TaxSummary:
        type: array
        items:
          $ref: '#/definitions/TaxDetail'
        xml:
          wrapped: true
      TaxAddresses:
        type: array
        items:
          $ref: '#/definitions/TaxAddress'
        xml:
          wrapped: true
      ResultCode:
        $ref: '#/definitions/ResultCode'
  TaxLine:
    description: Tax calculation details for each item line (returned for detail levels `Line` and `Tax`).
    xml:
      name: TaxLine
    properties:
      LineNo:
        maxLength: 50
        type: string
        description: Line item identifier.
      TaxCode:
        type: string
        description: The tax code used in calculating tax.
        maxLength: 25
      Taxability:
        type: boolean
        description: Flag indicating item was taxable.
      Taxable:
        type: number
        description: The amount that is taxable.
      Rate:
        type: number
        description: Effective tax rate.
      Tax:
        type: number
        description: Tax amount.
      Discount: 
        type: number
        description: Discount amount.
      TaxCalculated:
        type: number
        description: Amount of tax calculated.
      Exemption:
        type: number
        description: Exempt amount.
      BoundaryLevel:
        type: string
        description: 'The boundary level used to calculate tax: determined by the quality of provided addresses.'
        maxLength: 7
      TaxDetails:
        type: array
        items:
          $ref: '#/definitions/TaxDetail'
        xml:
          wrapped: true
  TaxAddress:
    description: Represents canonical addresses used in tax calculation.
    xml:
      name: TaxAddress
    properties:
      Address:
        type: string
        description: Canonical street address
        maxLength: 50
      AddressCode:
        type: string
        description: Reference code uniquely identifying this address instance. AddressCode will always correspond to an address code supplied to in the address collection provided in the request.
      City:
        type: string
        description: City name
        maxLength: 50
      Region:
        type: string
        description: State or region name
        maxLength: 3
      Country:
        type: string
        description: 'Country code, as ISO 3166-1 (Alpha-2) country code (e.g. "US")'
        maxLength: 2
      PostalCode:
        type: string
        description: Postal code
        maxLength: 11
      Latitude:
        type: number
        description: 'Geographic latitude.'
      Longitude:
        type: number
        description: 'Geographic longitude.'
      TaxRegionId:
        type: number
        description: AvaTax tax region identifier.
      JurisCode:
        type: string
        description: Tax jurisdiction code.
  ValidateResult:
    description: Output for address/validate showing a single validated address match or address validation errors.
    properties:
      Address:
        title: Address
        type: object
        properties:
          Line1:
            type: string
            example: 45 Fremont Street
            description: Address line 1
            maxLength: 50
          Line2:
            type: string
            example: Suite 100
            description: Address line 2
            maxLength: 50
          Line3:
            type: string
            example: ATTN Accounts Payable
            description: Address line 3
            maxLength: 50
          City:
            type: string
            example: Chicago
            description: City name
            maxLength: 50
          Region:
            type: string
            example: IL
            description: 'State, province, or region name.'
            maxLength: 3
          Country:
            type: string
            example: US
            description: Country code.
            maxLength: 2
          PostalCode:
            type: string
            example: '60602'
            description: Postal or ZIP code
            maxLength: 11
          AddressType:
            type: string
            description: 'Address type code. One of:
            * F - Firm or company address
            * G - General Delivery address
            * H - High-rise or business complex
            * P - PO Box address
            * R - Rural route address
            * S - Street or residential address' 
            maxLength: 1
          FipsCode:
            type: string
            description: 'FIPSCode is a unique 10-digit code representing each geographic combination of state, county, and city. The code is made up of the Federal Information Processing Code (FIPS) that uniquely identifies each state, county, and city in the U.S. Returned for US addresses only. Digits represent jurisdiction codes:
              * 1-2 State code
              * 3-5 County code
              * 6-10 City code'
            maxLength: 10
          CarrierRoute:
            type: string
            description: 'CarrierRoute is a four-character string representing a US postal carrier route. The first character of this property, the term, is always alphabetic, and the last three numeric. For example, “R001” or “C027” would be typical carrier routes. The alphabetic letter indicates the type of delivery associated with this address. Returned for US addresses only.
             * B - PO Box
             * C - City delivery
             * G - General delivery
             * H - Highway contract
             * R - Rural route'
            maxLength: 4
          PostNet:
            type: string
            description: 'POSTNet is a 12-digit barcode containing the ZIP Code, ZIP+4 Code, and the delivery point code, used by the USPS to direct mail. Returned for US addresses only digits represent delivery information:
              * 1-5 ZIP code
              * 6-9 Plus4 code
              * 10-11 Delivery point
              * 12 Check digit'
            maxLength: 12
      ResultCode:
        $ref: '#/definitions/ResultCode'
  ValidateResultError:
    xml:
      name: ValidateResult
    properties:
      ResultCode:
        $ref: '#/definitions/ErrorResultCode'
      Messages:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Message'
