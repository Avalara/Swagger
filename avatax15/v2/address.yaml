swagger: '2.0'
info:
  description: "This is a proposal for a v2 of the AvaTax REST API. This is a DESIGN DOCUMENT ONLY and is not intended to be used, since this API DOES NOT EXIST. 
    
    * All resources below map DIRECTLY to A16 resources. The request and response payloads are almost identical in format (but favor the flatter A15 style as opposed to the more nested A16 style), with allowances made for the different structures of A15 and A16. 

    * This API is specific to address validation operations. For tax-based operations, see the tax API.

    * Right now, this document only describes basic auth. If we want token-based auth as well, that would just be an additional security scheme.
    
    "
  version: '2.0'
  title: AvaTax v2 REST API Proposal
  termsOfService: 'http://www.avalara.com/terms/'
  contact:
    name: 'For support, visit the Avalara Community'
    url: 'https://community.avalara.com/avalara/category_sets/developers'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: address.api.avalara.com
basePath: /v2
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
security:
  - basic_auth: []
paths:
  '/all':
    get:
      summary: Error Messages
      description: "The following status codes can be returned by all operations."
      operationId: all
      responses:
        '200':
          description: "Successful operation"
        '401':
          description: "The authorization header was malformed, or the provided credentials were not valid."
          schema:
            $ref: '#/definitions/error'
        '400':
          description: "The request was invalid in form or data, and should be corrected before retrying. Additonal error information is provided in the response body. For tax calculation or address validation, this is returned when tax could not be calculated/ the address could not be validated."
          schema:
            $ref: '#/definitions/error'
        '404':
          description: "The requested resource was not found. This can be returned for CompanyNotFound or DocumentNotFound, or for an invalid DocType specified. Details are provided in the response body."
          schema:
            $ref: '#/definitions/error'
        '503':
          description: "The service is temporarily unavailable."
          schema:
            $ref: '#/definitions/error'
  '/validAddresses':
    get:
      summary: Validate an Address
      description: 'Normalizes a single US or Canadian address, providing a non-ambiguous USPS address match.'
      operationId: validateAddress
      tags:
        - address
      parameters: 
        - name: line1
          required: true
          type: string
          description: Address line 1
          in: query
          maxLength: 50
        - name: line2
          required: false
          type: string
          description: Address line 2
          in: query
          maxLength: 50
        - name: line3
          required: false
          type: string
          description: Address line 3
          in: query
          maxLength: 50
        - name: city
          required: false
          type: string
          description: City name. Optional unless PostalCode is not specified.
          in: query
          maxLength: 50
        - name: region
          required: false
          type: string
          in: query
          maxLength: 3
        - name: country
          in: query
          required: true
          type: string
          maxLength: 2
        - name: postalCode
          in: query
          required: false
          type: string
          maxLength: 11
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/validateResult'
        '400':
          description: 'Invalid Address'
          schema: 
            $ref: '#/definitions/error'
####################################################            
            
securityDefinitions:
  basic_auth:
    type: basic
    description: "You will not be able to make web service calls until you have received an active account number and license key via email, or a username and password from the [sandbox registration](http://developer.avalara.com/getting-started). Authentication is in the format `Basic [account number]:[license key]` encoded to Base64, as per basic access authentication. For example: `Authorization: Basic a2VlcG1vdmluZzpub3RoaW5nMnNlZWhlcmU=`"
###################################################

definitions:
  address:
    description: Represents a single physical location.
    required:
      - line1
      - city
      - region
      - postalCode
    properties:
      line1:
        maxLength: 50
        type: string
        example: 45 Fremont Street
        description: 'Address line 1, required if Latitude and Longitude are not provided.'
      line2:
        maxLength: 50
        type: string
        example: Suite 100
        description: Address line 2
      line3:
        maxLength: 50
        type: string
        example: ATTN Accounts Payable
        description: Address line 3
      city:
        maxLength: 50
        type: string
        example: Chicago
        description: 'City name, required unless PostalCode is specified and/or Latitude and Longitude are provided.'
      region:
        maxLength: 3
        type: string
        example: IL
        description: 'State, province, or region name. Required unless City is specified and/or Latitude and Longitude are provided.'
      country:
        maxLength: 2
        type: string
        example: US
        description: "Country code. If not provided, will default to 'US'."
      postalCode:
        maxLength: 11
        type: string
        example: '60602'
        description: 'Postal or ZIP code, Required unless City and Region are specified, and/or Latitude and Longitude are provided.'
      latitude:
        type: number
        format: float
        example: '47.627935'
        description: 'Geographic latitude. If Latitude is defined, it is expected that the longitude field will also be provided. Failure to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      longitude:
        type: number
        format: float
        example: '-122.51702'
        description: 'Geographic longitude. If Longitude is defined, it is expected that the latitude field will also be provided. Fail to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      taxRegionId:
        type: number
        format: integer
        description: 'AvaTax tax region identifier. If a non-zero value is entered into TaxRegionId, other fields will be ignored.'
  validateResult:
    description: Output for address/validate showing the validated address match.
    allOf:
      - $ref: '#/definitions/address'
      - type: object
        properties:
          addressType:
            type: string
            description: 'Address type code. One of:
            * F - Firm or company address
            * G - General Delivery address
            * H - High-rise or business complex
            * P - PO Box address
            * R - Rural route address
            * S - Street or residential address' 
            maxLength: 1
          fipsCode:
            type: string
            description: 'FIPSCode is a unique 10-digit code representing each geographic combination of state, county, and city. The code is made up of the Federal Information Processing Code (FIPS) that uniquely identifies each state, county, and city in the U.S. Returned for US addresses only. Digits represent jurisdiction codes:
            * 1-2 State code
            * 3-5 County code
            * 6-10 City code'
            maxLength: 10
          carrierRoute:
            type: string
            description: 'CarrierRoute is a four-character string representing a US postal carrier route. The first character of this property, the term, is always alphabetic, and the last three numeric. For example, “R001” or “C027” would be typical carrier routes. The alphabetic letter indicates the type of delivery associated with this address. Returned for US addresses only.
            * B - PO Box
            * C - City delivery
            * G - General delivery
            * H - Highway contract
            * R - Rural route'
            maxLength: 4
          postNet:
            type: string
            description: 'POSTNet is a 12-digit barcode containing the ZIP Code, ZIP+4 Code, and the delivery point code, used by the USPS to direct mail. Returned for US addresses only digits represent delivery information:
            * 1-5 ZIP code
            * 6-9 Plus4 code
            * 10-11 Delivery point
            * 12 Check digit'
            maxLength: 12
  message:
    properties:
      summary:
        maxLength: 255
        type: string
        example: Company not found.  Verify the CompanyCode.
        description: The message summary in short form.
      details:
        maxLength: 255
        type: string
        example: APITrialCompany
        description: Description of the error or warning.
      refersTo:
        maxLength: 255
        type: string
        example: CompanyCode
        description: The data used during the request that caused the message to be generated.
      source:
        maxLength: 255
        type: string
        example: Avalara.AvaTax.Services.Tax
        description: The internal location that generated the message.
      severity:
        type: string
        example: Error
        description: "Classifies the severity of the message."
        enum:
          - Success
          - Warning
          - Error
          - Exception  
  error:
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/message'