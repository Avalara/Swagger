swagger: '2.0'
info:
  description: "This is a proposal for a v2 of the AvaTax REST API. This is a DESIGN DOCUMENT ONLY and is not intended to be used, since this API DOES NOT EXIST. 
    
    * All resources below map DIRECTLY to A16 resources. The request and response payloads are almost identical in format (but favor the flatter A15 style as opposed to the more nested A16 style), with allowances made for the different structures of A15 and A16. 
    
    * Existing field names from AvaTax 15 are used.  This is a better than renaming things in A16 terminology that are not consistent with the existing db, API, documentation, and most importantly customer understanding (particularly for TaxSvc (here there's already a pretty detailed and complex conversation with customers). Some parameters have refactored from request body to path: CompanyCode, DocType, DocCode.
    
    * An address can be specified at the document/line directly (as opposed to the current AddressCode/OriginCode method). This is reflected in the Document format below. This follows the A16 model.
    
    * I'd like to add a feature where you can POST .../{docCode} to amend a document - this can add line items without repeating the whole document (an oft-requested feature) and permits changing DocCode. Right now, A15 lets you change DocCode in PostTax and CommitTax. POST .../{docCode} should ALSO let you change a document state! I think this is superior to the /stateTransitions model, but in the interest of keeping this draft as close to A16 as possible, that's what is reflected here.
    
    * Right now, this document only describes basic auth. If we want token-based auth as well, that would just be an additional security scheme.
    
    * This API is specific to tax operations. For address validation operations, see the address API.

    "
  version: '2.0'
  title: AvaTax v2 REST API Proposal
  termsOfService: 'http://www.avalara.com/terms/'
  contact:
    name: 'For support, visit the Avalara Community'
    url: 'https://community.avalara.com/avalara/category_sets/developers'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: tax.api.avalara.com
basePath: /v2
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
security:
  - basic_auth: []
paths:
  '/all':
    get:
      summary: Error Messages
      description: "The following status codes can be returned by all operations."
      operationId: all
      responses:
        '200':
          description: "Successful operation"
        '401':
          description: "The authorization header was malformed, or the provided credentials were not valid."
          schema:
            $ref: '#/definitions/error'
        '400':
          description: "The request was invalid in form or data, and should be corrected before retrying. Additonal error information is provided in the response body. For tax calculation or address validation, this is returned when tax could not be calculated/ the address could not be validated."
          schema:
            $ref: '#/definitions/error'
        '404':
          description: "The requested resource was not found. This can be returned for CompanyNotFound or DocumentNotFound, or for an invalid DocType specified. Details are provided in the response body."
          schema:
            $ref: '#/definitions/error'
        '503':
          description: "The service is temporarily unavailable."
          schema:
            $ref: '#/definitions/error'
  '/taxRates':
    get:
      summary: Estimate Tax
      description: "Customers consistently want the ability to 'just get the tax' for a given address or lat/long. This has proven to be a great marketing tool, and a great tool for getting developers introduced to the tax service. This operation would just return TPP tax for an all-nexus-on company profile, similar to the [tax map](http://salestax.avalara.com/) or the existing EstimateTax or WidgetTax (which is used by the map). You'll notice that there is no `company` or `account` path segment here - the calculation returned should be generic independent of account. All properties of Address are accepted as queryparams, I've just listed a few here for brevity."
      operationId: estimateTax
      parameters:
        - in: query
          name: line1
          type: string
        - in: query
          name: city
          type: string
        - in: query
          name: postalCode
          type: string
        - in: query
          name: latitude
          type: string
        - in: query
          name: longitude
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/estimateTaxResult'
  '/accounts/{accountId}/companies/{companyCode}/documents':  
    parameters:
      - $ref: '#/parameters/accountId'
      - $ref: '#/parameters/companyCode'
    get:
      summary: Retrieve documents belonging to a Company
      description: "Functionally equivalent to the AccountSvc DocumentFetch if possible, or if that poses a permissions issue, perhaps to a (fixed) ReconcileTaxHistory without the reconciliation bit? This is not a full list of permitted queryparams. This operation should allow limits and pagination."
      operationId: documentFetch
      parameters:
        - in: query
          name: startDate
          type: string
        - in: query
          type: string
          name: endDate
        - in: query
          type: string
          name: documentType
        - in: query
          type: string
          name: documentCode
      responses: 
        '200':
          description: 'Successful Operation. If no documents are found, the result set will be empty.'
          schema:
            $ref: '#/definitions/documentFetchResult'
  '/accounts/{accountId}/companies/{companyCode}/documents/{docType}':
    parameters:
      - $ref: '#/parameters/accountId'
      - $ref: '#/parameters/companyCode'
      - $ref: '#/parameters/docType'
    post:
      summary: Calculate tax and optionally record a document.
      operationId: getTax
      description: 'Equivalent to existing GetTax. If already existing document is resent, we could either update it and return a 200, or we could return a 409 with a path to the /{docCode}'
      parameters:
        - in: body
          required: true
          name: document
          schema:
            $ref: '#/definitions/requestDocument'
      responses:
        '200':
          description: 'Successful Operation, no record created'
          schema:
            $ref: '#/definitions/responseDocument'
        '201':
          description: 'Successful Operation, record created'
          schema:
            $ref: '#/definitions/responseDocument'
  '/accounts/{accountId}/companies/{companyCode}/documents/{docType}/{docCode}':
    parameters:
      - $ref: '#/parameters/accountId'
      - $ref: '#/parameters/companyCode'
      - $ref: '#/parameters/docType'
      - $ref: '#/parameters/docCode'
    get:
      summary: Retrieve a document
      description: 'Equivalent to GetTaxHistory, but GetTaxResult now has all info from the request and response in it.'
      operationId: getTaxHistory
      responses:
        '200':
          description: 'Successful Operation, no record created'
          schema:
            $ref: '#/definitions/responseDocument'
    put:
      summary: Adjust a document
      description: 'Equivalent to AdjustTax. Note that this has always worked just like GetTax, except it allows you to update committed documents. It would continue to do that. The entire GetTaxRequest must be present.'
      operationId: adjustTax
      parameters:
        - in: body
          name: document
          schema:
            $ref:
              '#/definitions/requestDocument'
      responses:
        '200':
          description: 'Successful Operation'
          schema:
            $ref: '#/definitions/responseDocument'
        '201':
          description: 'Document created. (This operation can also be used to create a document.)'
          schema:
            $ref: '#/definitions/responseDocument'
        '303':
          description: 'Resource moved. This operation can be used to change the DocCode, which would change the doc-specific URL.'
    post:
      summary: Amend a document [NEW FEATURE]
      description: 'Allows the amendment of an existing document without reiterating the entire document. Only specified properties will be updated. This can also be used to change the status of a document, making it equivalent to CancelTax, PostTax, CommitTax. Recalculation of tax triggered by this operation is lazy: if parameters are specified that do not require recalculation (noteably, changes of document state), a calculation will not be performed. As such, all request parameters are optional.'
      operationId: amendTax
      parameters:
        - in: body
          name: partialDocument
          schema:
            $ref:
              '#/definitions/requestDocument'
      responses:
        '200':
          description: 'Successful Operation'
          schema:
            $ref: '#/definitions/responseDocument'
        '303':
          description: 'Resource moved. This operation can be used to change the DocCode, which would change the doc-specific URL.'
  '/accounts/{accountId}/companies/{companyCode}/documents/{docType}/{docCode}/stateTransitions':
    parameters:
      - $ref: '#/parameters/accountId'
      - $ref: '#/parameters/companyCode'
      - $ref: '#/parameters/docType'
      - $ref: '#/parameters/docCode'
    post:
      summary: Change a Transaction State
      description: 'Takes the place of PostTax, CommitTax, and CancelTax. Changes the state of the of the document to the specified target state, and optionally changes the docCode. Optionally recalculates tax.'
      operationId: changeState
      parameters: 
        - in: body
          name: stateTransitionRequest
          schema:
            $ref:
              '#/definitions/stateTransitionRequest'
      responses:
        '200':
          description: 'Successful Operation'
          schema:
            $ref: '#/definitions/responseDocument'
        '303':
          description: 'Resource moved. This operation can be used to change the DocCode, which would change the doc-specific URL.'

    
####################################################            
            
securityDefinitions:
  basic_auth:
    type: basic
    description: "You will not be able to make web service calls until you have received an active account number and license key via email, or a username and password from the [sandbox registration](http://developer.avalara.com/getting-started). Authentication is in the format `Basic [account number]:[license key]` encoded to Base64, as per basic access authentication. For example: `Authorization: Basic a2VlcG1vdmluZzpub3RoaW5nMnNlZWhlcmU=`"

####################################################            
 
parameters:
  accountId:
    name: accountId
    description: "The unique account number provided by Avalara for verification against the service."
    type: string
    in: path
    required: true
    maxLength: 10
  companyCode:
    name: companyCode
    description: "The case-sensitive code that identifies the company in the AvaTax account in which the document should be posted. This code is declared during the company setup in the AvaTax Admin Console. If no value is passed, the document will be assigned to the default company. If a value is passed that does not match any company on on the account, an error is returned."
    type: string
    in: path
    required: true
    maxLength: 25
  docType:
    name: docType
    in: path
    required: true
    description: "The document type specifies the category of the document and what types of tax should be applied."
    type: string
    enum:
      - Sales
      - Returns
      - Purchases
      - InventoryTransfers
      - ReverseCharges
  docCode:
    name: docCode
    in: path
    required: true
    description: "The identifier of the document provided by the calling application. In conjunction with DocType and CompanyCode, this uniquely identifies a document record."
    type: string

####################################################

definitions:
  stateTransitionRequest:
    required:
      - docStatus
    properties:
      recalculate:
        type: boolean
        description: "If set to `true`, tax will be recalculated on the document at the time of the state transition. Default is `false`."
      docStatus:
        type: string
        description: 'The target state for the document.'
        enum: 
          - Uncommitted
          - Committed
          - Voided
          - NotRecorded
      newDocCode:
        type: string
        description: 'If specified, will change the document code to the specified value.'
  documentFetchResult:
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/documentSummary'
  documentSummary:
    description: 'This can include any document level information - if a user wants more detail, they can pull a GetTaxHistory to get the full request/response.'
    properties:
      docCode:
        type: string
      docType:
        type: string
      docDate:
        type: string
      customerCode:
        type: string
      totalAmount:
        type: number
      totaltax: 
        type: number
  baseDocument:
    properties:
      businessIdentificationNo:
        maxLength: 25
        type: string
        example: '234234'
        description: 'The buyer’s VAT id. Using this value will force VAT rules to be considered for the transaction. This may be set on the document or the line. Note that this must be a valid VAT number, and this field should not be used for any other purpose.'
      docStatus:
        type: string
        example: Uncommitted
        description: 'The target state for the document. One of: Uncommitted, Committed, Voided, NotRecorded. With POST /{docCode}, can be used to change the state of the document. This enum can also contain UncommittedPosted (to accommodeate legcacy document records), but that is not an acceptable target document state.'
        enum: 
          - NotRecorded
          - Uncommitted
          - Committed
          - Voided
      customerCode:
        maxLength: 50
        type: string
        example: ABC4335
        description: The case-sensitive client application customer reference code. This is required since it is the key to the Exemption Certificate Management Service in the Admin Console.
      currencyCode:
        maxLength: 3
        type: string
        example: USD
        description: '3 character ISO 4217 compliant currency code. If unspecified, a default of USD will be used.'
      customerUsageType:
        maxLength: 25
        type: string
        example: G
        description: "The client application customer or usage type. More information about this value is available in the [Avalara Help Center](https://help.avalara.com/kb/001/What_are_the_Entity_Use_Codes_used_for_Avalara_AvaTax%3F). 
         The standard values for the CustomerUsageType are: 
         A - Federal Government 
         B - State/Local Govt.
         C - Tribal Government
         D - Foreign Diplomat
         E - Charitable Organization
         F - Religious/Education
         G - Resale
         H - Agricultural Production
         I - Industrial Prod/Mfg.
         J - Direct Pay Permit
         K - Direct Mail
         L - Other
         N - Local Government
         P - Commercial Aquaculture (Canada)
         Q - Commercial Fishery (Canada)
         R - Non-resident (Canada)
         MED1 - US MDET with exempt sales tax
         MED2 - US MDET with taxable sales tax "
      detailLevel:
        type: string
        example: Tax
        description: "Specifies the level of detail to return.
         Summary - summarizes document and jurisdiction detail with no line breakout 
         Document - only document detail 
         Line - document and line detail 
         Tax - document, line and jurisdiction detail"
      docCode:
        maxLength: 50
        type: string
        description: 'While this is an optional field, serious consideration should be given to using it. If no value is sent, AvaTax assigns a GUID value to keep the document unique. This can make reconciliation a challenge. If specified on a POST /{docCode} or PUT /{docCode}, this will change the existing DocCode value.'
        example: INV001
      docDate:
        type: string
        format: date
        example: '2014-01-01'
        description: 'The date on the invoice, purchase order, etc. Format YYYY-MM-DD. If omitted, this will default to the current date.'
      taxDate: 
        type: string
        format: date
        description: Date used to assess tax rates and jurisdictions.
      exemptionNo:
        maxLength: 25
        type: string
        description: 'Any string value will cause the sale to be exempt. This should only be used if your finance team is manually verifying and tracking exemption certificates.'
        example: 'EX-0001'
      locationCode:
        maxLength: 25
        type: string
        example: '01'
        description: 'Also referred to as a Store Location, Outlet Id, or Outlet code. Location code is a value assigned by some State jurisdictions that identifies a particular store location. These States may require tax liabilities to be broken out separately for each store Location.'
      posLaneCode:
        maxLength: 50
        type: string
        example: 09
        description: Permits a Point of Sale application to record the unique code / ID / number associated with the terminal processing a sale.
      purchaseOrderNo:
        maxLength: 50
        type: string
        example: ''
        description: Your customer’s purchase order number.
      referenceCode:
        maxLength: 50
        type: string
        example: ''
        description: 'For returns, refers to the DocCode of the original invoice.'
      taxOverrideAmount:
        type: number
        format: float
        description: 'The overriding amount of tax to apply. When specified at the document level, this is distributed across all taxable rows.'
      overrideExemption:
        type: boolean
        description: 'Overrides the presence of any exemption certificate. Equivalent to TaxOverrideType.Exemption'
      destinationAddress:
        $ref: '#/definitions/address'
      originAddress:
        $ref: '#/definitions/address'
  requestDocument:
    allOf:
      - $ref: '#/definitions/baseDocument'
      - type: object
        properties:
          lines:
            type: array
            items:
              $ref: '#/definitions/line'
            description: Document line array. There is a limit of 15000 lines per document.
  responseDocument:
    allOf:
      - $ref: '#/definitions/baseDocument'
      - type: object
        properties:
          timeStamp:
            type: string
            format: date-time
            description: Server timestamp of request.
            readOnly: true
          totalAmount:
            type: number
            format: float
            description: Sum of all line Amount values.
            readOnly: true
          totalDiscount:
            type: number
            format: float
            description: Sum of all TaxLine discount amounts.
            readOnly: true
          totalExemption:
            type: number
            format: float
            description: Total exemption amount.
            readOnly: true
          totalTaxable:
            type: number
            format: float
            description: Total taxable amount.
            readOnly: true
          totalTax:
            type: number
            format: float
            description: Sum of all TaxLine tax amounts.
            readOnly: true
          totalTaxCalculated:
            type: number
            format: float
            description: TotalTaxCalculated indicates the total tax calculated by AvaTax. This is usually the same as the TotalTax, except when a tax override amount is specified. This is for informational purposes. The TotalTax will still be used for reporting.
            readOnly: true
          taxLines:
            type: array
            items:
              $ref: '#/definitions/taxLine'
          taxSummary:
            type: array
            items:
              $ref: '#/definitions/taxDetail'
            readOnly: true
  taxLine:
    allOf:
      - $ref: '#/definitions/line'
      - type: object
        properties:
          taxability:
            type: boolean
            description: Flag indicating item was taxable
            readOnly: true
          taxable:
            type: number
            format: float
            description: The amount that is taxable
            readOnly: true
          rate:
            type: number
            format: float
            description: Effective tax rate
            readOnly: true
          tax:
            type: number
            format: float
            description: Tax amount
            readOnly: true
          taxCalculated:
            type: number
            format: float
            description: Amount of tax calculated
            readOnly: true
          exemption:
            type: number
            format: float
            description: Exempt amount
            readOnly: true
          boundaryLevel:
            type: string
            description: 'The boundary level used to calculate tax: determined by the provided addresses'
            maxLength: 7
            readOnly: true
          taxDetails:
            type: array
            readOnly: true
            items:
              $ref: '#/definitions/taxDetail'
  line:
    description: Input property of the GetTaxRequest describing item lines.
    required:
      - lineNo
      - destinationAddress
      - originAddress
      - qty
    properties:
      lineNo:
        maxLength: 50
        type: string
        example: '1'
        description: Line item identifier. LineId uniquely identifies the line item row.
      destinationAddress:
        $ref: '#/definitions/address'
      originAddress:
        $ref: '#/definitions/address'
      itemCode:
        maxLength: 50
        type: string
        example: N543
        description: 'Your item identifier, SKU, or UPC. Strongly recommended.'
      taxCode:
        maxLength: 25
        type: string
        example: NT
        description: 'Product taxability code of the line item. Can be an AvaTax system tax code, or a custom-defined tax code.'
      customerUsageType:
        maxLength: 25
        type: string
        example: L
        description: "The client application customer or usage type. CustomerUsageType determines the exempt status of the transaction based on the exemption tax rules for the jurisdictions involved. Can also be referred to as Entity/Use Code. More information about this value is available in the Avalara Help Center."
      businessIdentificationNo:
        maxLength: 25
        type: string
        example: '234234'
        description: The buyer’s VAT id. Using this value will force VAT rules to be considered for the transaction. This may be set on the document or the line.
      description:
        maxLength: 255
        type: string
        example: Red Size 7 Widget
        description: Item description. Required for customers using our filing service.
      qty:
        type: number
        example: '1'
        description: Item quantity. The tax engine does NOT use this as a multiplier with price to get the Amount.
      amount:
        type: number
        format: float
        example: '10'
        description: 'Total amount of item (extended amount, qty * unit price). If omitted, this value will default to 0'
      discount: 
        type: number
        format: float
        description: Discount amount
      taxIncluded:
        type: boolean
        example: 'false'
        description: 'Should be set to true if the tax is already included, and sale amount and tax should be back-calculated from the provided Line.Amount. Defaults to false.'
      ref1:
        maxLength: 250
        type: string
        example: ref123
        description: Value stored with SalesInvoice DocType that is submitter dependent.
      ref2:
        maxLength: 250
        type: string
        example: ref456
        description: Value stored with SalesInvoice DocType that is submitter dependent.
      taxOverrideAmount:
        type: number
        format: float
        description: 'The overriding amount of tax to apply. When specified at the document level, this is distributed across all taxable rows.'
      taxDate:
        type: string
        description: Date used to assess tax rates and jurisdictions.
      overrideExemption:
        type: boolean
        description: 'Overrides the presence of any exemption certificate. Equivalent to TaxOverrideType.Exemption'
  address:
    description: Represents a single physical location.
    required:
      - line1
      - city
      - region
      - postalCode
    properties:
      line1:
        maxLength: 50
        type: string
        example: 45 Fremont Street
        description: 'Address line 1, required if Latitude and Longitude are not provided.'
      line2:
        maxLength: 50
        type: string
        example: Suite 100
        description: Address line 2
      line3:
        maxLength: 50
        type: string
        example: ATTN Accounts Payable
        description: Address line 3
      city:
        maxLength: 50
        type: string
        example: Chicago
        description: 'City name, required unless PostalCode is specified and/or Latitude and Longitude are provided.'
      region:
        maxLength: 3
        type: string
        example: IL
        description: 'State, province, or region name. Required unless City is specified and/or Latitude and Longitude are provided.'
      country:
        maxLength: 2
        type: string
        example: US
        description: "Country code. If not provided, will default to 'US'."
      postalCode:
        maxLength: 11
        type: string
        example: '60602'
        description: 'Postal or ZIP code, Required unless City and Region are specified, and/or Latitude and Longitude are provided.'
      latitude:
        type: number
        format: float
        example: '47.627935'
        description: 'Geographic latitude. If Latitude is defined, it is expected that the longitude field will also be provided. Failure to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      longitude:
        type: number
        format: float
        example: '-122.51702'
        description: 'Geographic longitude. If Longitude is defined, it is expected that the latitude field will also be provided. Fail to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      taxRegionId:
        type: number
        format: integer
        description: 'AvaTax tax region identifier. If a non-zero value is entered into TaxRegionId, other fields will be ignored.'
  estimateTaxResult:
    properties:
      rate:
        type: number
        format: decimal
        description: Total effective tax rate
      taxDetails:
        type: array
        items:
          $ref: '#/definitions/taxDetail'
        xml:
          wrapped: true
  taxDetail:
    description: Tax details by jurisdiction
    properties:
      country:
        maxLength: 2
        type: string
        example: US
        description: "Country code. If not provided, will default to 'US'."
      jurisName:
        type: string
        description: Name of a tax jurisdiction
        example: BAINBRIDGE ISLAND
        maxLength: 200
      jurisCode:
        type: string
        description: State assigned code identifying the jurisdiction. Note that this is not necessarily a unique identifier of the jurisdiction.
        example: 035
        maxLength: 200
      jurisType:
        type: string
        maxLength: 9
        enum:
          - State
          - County
          - City
          - Country
          - Special Tax Jurisdiction
      rate:
        type: number
        format: decimal
        description: Effective tax rate for tax jurisdiction
        example: 0.022
      region:
        type: string
        description: Region of tax jurisdiction
        example: WA
        maxLength: 3
      tax:
        type: number
        format: decimal
        description: Tax amount
        example: 2.22
      taxName:
        type: string
        description: Tax name
        example: WA CITY TAX
        maxLength: 75
  message:
    properties:
      summary:
        maxLength: 255
        type: string
        example: Company not found.  Verify the CompanyCode.
        description: The message summary in short form.
      details:
        maxLength: 255
        type: string
        example: APITrialCompany
        description: Description of the error or warning.
      refersTo:
        maxLength: 255
        type: string
        example: CompanyCode
        description: The data used during the request that caused the message to be generated.
      source:
        maxLength: 255
        type: string
        example: Avalara.AvaTax.Services.Tax
        description: The internal location that generated the message.
      severity:
        type: string
        example: Error
        description: "Classifies the severity of the message."
        enum:
          - Success
          - Warning
          - Error
          - Exception  
  error:
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/message'
